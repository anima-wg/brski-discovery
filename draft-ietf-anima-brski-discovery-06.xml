<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc compact="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-brski-discovery-06" category="std" consensus="true" submissionType="IETF" tocDepth="5" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="BRSKI-discovery">BRSKI discovery and variations</title>

    <author initials="T." surname="Eckert" fullname="Toerless Eckert" role="editor">
      <organization abbrev="Futurewei">Futurewei USA</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>tte@cs.fau.de</email>
      </address>
    </author>
    <author initials="E." surname="Dijk" fullname="Esko Dijk">
      <organization>IoTconsultancy.nl</organization>
      <address>
        <email>esko.dijk@iotconsultancy.nl</email>
      </address>
    </author>

    <date year="2025" month="July" day="02"/>

    <area>Operations and Management</area>
    <workgroup>ANIMA</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 107?>

<t>This document specifies how BRSKI entities, such as registrars, proxies, pledges or others
that are acting as responders, can be discovered and selected by BRSKI entities acting as initiators,
especially in the face of variations in the protocols that can introduce non-interoperability
when not equally supported by both responder and initiator.</t>



    </abstract>



  </front>

  <middle>


<?line 114?>

<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>This document relies on the terminology defined in <xref target="BRSKI"/>.  The following terms are described partly in addition.</t>

<dl>
  <dt>Context:</dt>
  <dd>
    <t>See Variation Context.</t>
  </dd>
  <dt>IP, IPv4, IPv6:</dt>
  <dd>
    <t>In this document, IP refers to (inclusively) IPv4 or IPv6. If a statement applies to only one of the two versions, then the terms IPv4 or IPv6 are used.</t>
  </dd>
  <dt>Initiator:</dt>
  <dd>
    <t>A host that is using an IP transport protocol to initiate a connection or transaction to another host called the responder.</t>
  </dd>
  <dt>Initiator socket:</dt>
  <dd>
    <t>A socket consisting of an initiators IP address, protocol and protocol port number from which it
initiates connections or transactions to a responder (typically UDP or TCP).</t>
  </dd>
  <dt>Objective Name:</dt>
  <dd>
    <t>See Service Name.</t>
  </dd>
  <dt>Resource Type:</dt>
  <dd>
    <t>See Service Name.</t>
  </dd>
  <dt>Responder:</dt>
  <dd>
    <t>A host that is using an IP transport protocol to respond to transaction or connection requests from an Initiator.</t>
  </dd>
  <dt>Responder socket:</dt>
  <dd>
    <t>A socket consisting of a responders IP address, protocol and protocol port
number on which it responds to requests of the protocol (typically UDP or TCP).</t>
  </dd>
  <dt>Role:</dt>
  <dd>
    <t>In the context of this document, a type of entity in a variation of BRSKI that can act as a responder and whose supported variations can be discovered. BRSKI roles relevant in this document include Join Registrar, Join Proxy and Pledge. The IANA registry defined by this document allows to specify variations for any roles. See also Variation Context.</t>
  </dd>
  <dt>Socket:</dt>
  <dd>
    <t>The combination of am  IP address, an IP protocol that utilizes a port number (such as TCP or UDP) and a port number of that protocol.</t>
  </dd>
  <dt>Service Name:</dt>
  <dd>
    <t>The name for (a subset of) the functionality/API provided by a discoverable responder socket. This term is inherited from <xref target="DNS-SD"/> but unless otherwise specified also used in this document to apply to any other discovery functionality/API. The terminology used by other mechanisms typically differs. For example, when <xref target="GRASP"/> is used to discover a responder socket for BRSKI, the Objective Name carries the equivalent to the service name. In <xref target="CORE-LF"/>, the Resource Type (rt=) carries the equivalent of the service name.</t>
  </dd>
  <dt>Type:</dt>
  <dd>
    <t>See Variation Type.</t>
  </dd>
  <dt>Variation:</dt>
  <dd>
    <t>A combination one one variation choice each for every variation type applicable to the variation context of one discoverable BRSKI communications.
For example, in the context of BRSKI, a variation is one choice for "mode", one choice for "enroll" and once choice for "vformat".</t>
  </dd>
  <dt>Variation Context:</dt>
  <dd>
    <t>A set of Services for whom the same set of variations applies</t>
  </dd>
  <dt>Variation Type:</dt>
  <dd>
    <t>The name for one aspect of a protocol for which two or more choices exist (or may exist in the future), and where the choice
can technically be combined orthogonal to other variation types. This document defined the BRSKI variation types "mode", "enroll" and "vformat".</t>
  </dd>
  <dt>Variation Type Choice:</dt>
  <dd>
    <t>The name for different values that a particular variation type may have.
For example, this document does defines the choices "rrm" and "prm" for the BRSKI variation "mode".</t>
  </dd>
  <dt>ACP:</dt>
  <dd>
    <t>"An Autonomic Control Plane", <xref target="ACP"/>.</t>
  </dd>
  <dt>BRSKI:</dt>
  <dd>
    <t>"Bootstrapping Remote Secure Key Infrastructure", <xref target="BRSKI"/>.</t>
  </dd>
  <dt>BRSKI-AE:</dt>
  <dd>
    <t>"Alternative Enrollment Protocols in <xref target="BRSKI"/>", <xref target="BRSKI-AE"/>.</t>
  </dd>
  <dt>BRSKI-PRM:</dt>
  <dd>
    <t>"<xref target="BRSKI"/> with Pledge in Responder Mode", <xref target="BRSKI-PRM"/>.</t>
  </dd>
  <dt>cBRSKI:</dt>
  <dd>
    <t>"Constrained Bootstrapping Remote Secure Key Infrastructure (<xref target="BRSKI"/>)", <xref target="cBRSKI"/>.</t>
  </dd>
  <dt>COAP:</dt>
  <dd>
    <t>"The Constrained Application Protocol (CoAP)", <xref target="COAP"/>.</t>
  </dd>
  <dt>CORE-LF:</dt>
  <dd>
    <t>"Constrained RESTful Environments (CoRE) Link Format", <xref target="CORE-LF"/>.</t>
  </dd>
  <dt>cPROXY:</dt>
  <dd>
    <t>"Constrained Join Proxy for Bootstrapping Protocols", <xref target="cPROXY"/>.</t>
  </dd>
  <dt>DNS-SD:</dt>
  <dd>
    <t>"DNS-Based Service Discovery", <xref target="DNS-SD"/>.</t>
  </dd>
  <dt>EST:</dt>
  <dd>
    <t>"Enrollment over Secure Transport", <xref target="EST"/>.</t>
  </dd>
  <dt>GRASP:</dt>
  <dd>
    <t>"GeneRic Autonomic Signaling Protocol", <xref target="GRASP"/>.</t>
  </dd>
  <dt>GRASP-DNSSD:</dt>
  <dd>
    <t>"DNS-SD Compatible Service Discovery in GeneRic Autonomic Signaling Protocol (GRASP)", <xref target="I-D.eckert-anima-grasp-dnssd"/>.</t>
  </dd>
  <dt>JWS-VOUCHER:</dt>
  <dd>
    <t>"JWS signed Voucher Artifacts for Bootstrapping Protocols", <xref target="JWS-VOUCHER"/>.</t>
  </dd>
  <dt>lwCMP:</dt>
  <dd>
    <t>"Lightweight Certificate Management Protocol (CMP) Profile", <xref target="RFC9483"/>.</t>
  </dd>
  <dt>mDNS:</dt>
  <dd>
    <t>"multicast DNS", <xref target="mDNS"/>.</t>
  </dd>
  <dt>SCEP:</dt>
  <dd>
    <t>"Simple Certificate Enrolment Protocol", <xref target="RFC8894"/>.</t>
  </dd>
</dl>

</section>
<section anchor="overview"><name>Overview</name>

<section anchor="challenges"><name>Challenges</name>

<t>BRSKI is a protocol with several current variations of aspects of the protocol.
These variations exist to best serve different use-cases, product development
and solution deployment preferences. Additional/new use-case preferences may prefer
even further variations. All these current and future variations introduce challenges
with interoperability, that the mechanisms defined in this document intent to help sove. These challenges are as follows.</t>

<section anchor="signaling-brski-variation-for-responder-selection"><name>Signaling BRSKI variation for responder selection.</name>

<t>When an initiator such as a Join Proxy or BRSKI pledge uses a mechanism such as
<xref target="DNS-SD"/> to discover an instance of a role it intends to connect to, such
as a registrar, it may discover more than one such instance.</t>

<t>When an initiator uses a discovery mechanism such as <xref target="DNS-SD"/> to discover an instance of
the BRSKI role that it intends to connect to, it may discover more than one such instance.
FOr example, BRSKI pledges want to discover Join Proxies or registrars.
In the presence of variations of the BRSKI mechanisms that impact interoperability, performance
or security, not all discovered instances may support exactly what the initiator needs to achieve
interoperability or they may not provide the best desired metric. To support choosing an
interoperable/best responder, the service announcement mechanism needs to carry the necessary
additional information beside the service name that indicates the service/role of the responder.</t>

</section>
<section anchor="consistent-support-for-variations-across-different-discovery-mechanisms"><name>Consistent support for variations across different discovery mechanisms.</name>

<t>Different BRSKI deployments may prefer different discovery mechanisms, such as <xref target="DNS-SD"/>, <xref target="GRASP"/>,
<xref target="CORE-LF"/> or others. Any variation in discovery already defined for one discovery mechanism usually
has to be re-specified individually for every other discovery mechanism. This make it often cumbersome
to select the preferred discovery mechanism for a specific type of deployment, because such additional
specification work can take a long time. Indepedent specification of variations for different
discovery mechanisms can also easily lead to inconsistencies and hence the inability to equally
support all variations across all discovery mechanisms.</t>

</section>
<section anchor="variation-agnostic-support-for-join-proxies"><name>Variation agnostic support for Join Proxies</name>

<t>This document defines variations so that Join Proxies can be implemented and operated agnostic 
of variations: When a Join Proxy supports one variation for a particular IP version and transport
(TCP, UDP stateful/stateless), than it can support all current and future variations for the
same IP version and transport without the need for Join Proxy software or configuration updates.</t>

<t>To support agnostic implementations, variations can only differ in the payload of messages carried
across those TCP/UDP connections, but not the transport mechanisms used. New transport mechanisms can not be
variations, but need to be so-called contexts.</t>

<t>The choice of encoding of variations into different discovery methods also needs to ensure that it
can be discovered by legacy Join Proxy implementations.</t>

<t>Initial support for variations in proxies does create additional coding effort:
When a pledge or Registrar-Agent connects to a Join Proxy with the need to use a specific variation
on a registrar, then the Join Proxy needs to understand which variation that is, so that it can connect
the pledge or registrar to a registrar supporting that variation. This requires that proxies create
per-variation responder sockets.</t>

</section>
</section>
<section anchor="functional-summary"><name>Functional Summary</name>

<t>This document specifies a set of IANA registry tables for BRSKI. These tables allow to define
the attributes for different registry mechanisms to announce and discover different BRSKI role
responders as well as their variations. Defining these via registry tables maximizes consistency
across discovery mechanisms and eases support of variations across different discovery
mechanisms.</t>

<t>Using the discovery information specified through these tables, this document specifies
details of selection and fail-over when discovering more than one interoperable and available responder,
These procedures intend to provide resilience and scalability of BRSKI services not possible without dynamic
discovery mechanisms.</t>

<t>Finally, this document specifies procedures for Join Proxies to discover variations of registrars
using any discovery mechanism, annnounce them to pledges - and connect a pledge accordingly
to the right registrar based on the variation required by the pledge.  These procedures allow
to introduce new variations of BRSKI without need to upgrade proxies.</t>

</section>
</section>
<section anchor="specification"><name>Specification</name>

<section anchor="data-model"><name>Data Model</name>

<t>BRSKI Discovery is about discovery of one or more instances of responders supporting
a specific BRSKI role - and determining whether that responders variation of BRSKI protocol
options is compatible with / desired by the connection initiator. This section gives
the conceptual overview of how this is achieved.</t>

<section anchor="roles-and-services"><name>Roles and Services</name>

<t>In this document, a service is a specific functionality provided by a responder over
a network socket using a particular transport/security/session stack (such as TCP, UDP, COAP, DTLS).
BRSKI as specified in <xref target="BRSKI"/> specifies a service it calls</t>

<t>In this document, a role is functionality performed by a BRSKI entity either as an initiator or responder.
<xref target="BRSKI"/> defines the roles of pledge, Join Proxy, registrar, MASA. <xref target="BRSKI-PRM"/>
adds the role Registrar-Agent. Trust anchor is a dependent role required by BRSKI, provided
through <xref target="EST"/> or other protocols in <xref target="BRSKI-AE"/>.</t>

<t>A single entity may implement multiple roles such as registrars that also often implement
the Join Proxy Role or pledges which change stop being a pledge after enrolment but often
then become Join Proxies. Future BRSKI documents may introduce additional roles and many of the definitions in this
document should be extensible to also support such additional roles.</t>

<t>In this document a service is functionality performed as a result of a network connection
from an initator to a responder. It is commonly named after the role name of the responder,
such as Join Proxy, registrar or MASA. This makes specifically sense in the context of
discovery, because initiators need to discover responders to establish the network connection.</t>

</section>
<section anchor="service-names"><name>Service Names</name>

<t>The role that a responder socket supports is indicated in each discovery mechanism through an
appropriate signalling element. <xref target="DNS-SD"/> calls this signalling element the Service Name. Due to
the absence of another equally widely used term for this type of signalling element across arbitrary
discovery mechanisms, this document also refers to the role signaling element as the service name,
 independent of the discovery mechanism.  IP Address, IP transport protocol and IP transport
protocol port are not part of the Service name and signalled across discovery mechanisms specific signaling elements.</t>

</section>
<section anchor="variations"><name>Variations</name>

<t>Variations in the BRSKI protocol such as the choice of encoding of messages or features
could impact interoperability between initiator and responder. Initiators
need be able to discover and select responders based not only on the desired role,
but also based on the best variation for the initiator.</t>

<t>Variations of a role could be indicated by using a different Service Name for every variation,
but that approach would have two challenges</t>

<t><list style="numbers">
  <t>Service Names in different discovery mechanisms are typically not hierarchical (e.g.: not
"role.variation"). Relying only on Service Names would thus require the registration for
every variation as a separate Service Name in a "flat" name space; and register them once for each discovery mechanism.
In addition, not all discovery mechanism registry rules may look favorably at the registration
of Service Names for such protocol variations.</t>
  <t>Whenever a new variation is introduced, all deployed BRSKI proxies would need to be configured
to also proxy this new variation - because new Service Names for the same BRSKI role can
be auto discovered by proxies (without additional protocol mechanisms that would be more
complex than the variations approach). Most Join Proxies should be able to operate without
configuration though.</t>
</list></t>

<t>For these reasons, this document introduces the encoding of BRSKI (role) variations
through a secondary signaling element in each discovery method, enabling proxies to transparently
support any variation of BRSKI role connections for which they supports proxying.</t>

<t>In addition, variations only need to be registered once in a BRSKI specific registry table introduced
by this document, and not once for each current or future discovery method.</t>

<t>A variation is hence specified as describing a combination of signaling choices that a BRSKI connection may
use and that impacts interoperability between initiator and responder at the message
exchange and encoding level.</t>

</section>
<section anchor="variation-types"><name>Variation Types</name>

<t>Today, BRSKI connections can exchange vouchers in one out of multiple different
encoding formats. Independent of that option, the BRSKI connection may also use different
commands (so called "Endpoints"). Todays these are based on whether <xref target="BRSKI-PRM"/> is used or not.
Finally, and also independent of those two options, the BRSKI connection may use one out of multiple
different enrollment protocol options.</t>

<t>This document calls these options "Variation Type", and the above three variation types
are called "vformat" for the voucher format, "mode" for the Endpoints being used (such as
PRM or not), and "enroll" for the enrollment protocol used.</t>

</section>
<section anchor="variation-type-choices"><name>Variation Type Choices</name>

<t>The actual choices for each of these variation types are hence called "Variation Type Choices":
"prm" or "rrm" for the variation type "mode". "cmsj", "cose" or "jose" for the variation type "vformat".
"est", "cmp" or "scep" for the variation type "enroll".</t>

<t>"scep" is an example for the ability of the registration to reserve values: it is not adopted
by any current BRSKI specification.</t>

</section>
<section anchor="variation-strings"><name>Variation Strings</name>

<t>The string name of a variation is as a string concatenating a single variation type choice for every
(necessary) variation type. For example "rrm-cmsj-est" could be describing the protocol options
used by a <xref target="BRSKI"/> connection pledge to registrar - potentially through a Join Proxy. This string
representation of a variation is called the variation string and it is consistently
used for signalling across any discovery mechanisms.</t>

<t>When in the future, additional variation types and choices are introduced, existing variation
strings must not be changed to allow full backward compatibility with existing/deployed implementations.</t>

<t>For example, when using BRSKI over UDP, today only COAPS is supported, but BRSKI UDP sockets
could equally work with QUIC (which runs on top of UDP). At that time, a new variation type of e.g.: "proto"
could be introduced with variation type choices "coaps" and "quic". For backward compatibility,
"coaps" then needs to be defined to be the default for BRSKI over UDP, which means that
existing variation strings such as "rrm-cmsj-est" imply the use of "coaps", whereas the use
of QUIC would have to be indicated explicitly via "rrm-cmsj-est-quic".</t>

<t>For variation strings to be semantically unambiguous, the variation type choices across all
variation types have distinct names, and the order in which variation type choices are
concatenated is the order in which variation types are defined in the according registry
table. Hence new variation type choices have to be tail added to the registry table.</t>

<t>Just because a variation name is composed from variation type choices does not mean that
an unspecified variation of (random) variation type choices can work without new implementation
or specification. Or even make sense. This may be the case, or it may not. This is also the reason
why this document specifies a registry that explicitly enumerates all variations that are
known to have sufficient specification and will work.</t>

<t>For example, <xref target="BRSKI-PRM"/> is indicated through the variation type value "prm", but it may also requires
enhancements to the enrolment protocol used, which is specified in the variation type "enroll", such as
new endpoints in that protocol.  The required functional semantic implied by the "enroll" variation type
value in variations with "prm" is thus a different one than in variations not using "prm". And
<xref target="BRSKI-PRM"/> does not necessarily sufficiently specify these enhancements for enrollment protocols
that may not have been known or specified by the time <xref target="BRSKI-PRM"/> was written.</t>

</section>
<section anchor="contexts"><name>Contexts</name>

<t>Variation strings are defined separately for every group of services for which the
set of variation strings is or could be different or could have different semantics.
A group of services for which the same variation strings are defined is called a Context.</t>

<t>Different list of variation strings are necessary when services have different variation types,
different variation type values, different deployed variations or different defaults
for the same variation type values and hence different variation strings.</t>

<t>"BRSKI" is the context covering <xref target="BRSKI"/> connections pledge to Join Proxy or registrar and Join Proxy to registrar
connections using TCP.</t>

<t>"cBRSKI" (constrained BRSKI) is the context covering <xref target="cBRSKI"/> 
connections pledge to Join Proxy or registrar and Join Proxy to registrar connections using UDP.</t>

<t>"BRSKI-PLEDGE" is the context covering pledges using <xref target="BRSKI-PRM"/> for connections
from Registrar-Agents. It can equally cover in the future through variations the discovery of 
<xref target="BRSKI"/> pledges for connections to them for other purposes - by introduction of
appropriate variation types and values for such additional purposes.</t>

<t>This document does not define variations for different end-to-end encryption mechanisms.
However, the mechanisms described here can also be used to introduce backward incompatible new secure transport options.</t>

<t>This document does also not introduce variation contexts for discovery of other BRSKI roles, such as discovery
of pledges by Registrar-Agents (as defined in <xref target="BRSKI-PRM"/>), or discovery of MASA by registrars. However, the registries
introduced by this document are defined such that those can be introduced later as well through additional
registry entries and specification.</t>

</section>
<section anchor="registry-tables"><name>Registry Tables</name>

<t>This document defines three IANA registry tables to register and document the parameters
required for BRSKI discovery in an extensible fashion. The following sections explain
these registry tables. The registry tables themselves are listed in the IANA considerations
section, see <xref target="registry"/>.</t>

<section anchor="variation-contexts-registry-table"><name>Variation Contexts Registry Table</name>

<t>The IANA "BRSKI Variations Contexts" registry table, see <xref target="fig-contexts"/>, as defined by this document, 
defines which Service Names and signaling parameters (e.g.: UDP vs. TCP) in each supported
discovery mechanism are used to discover which role for different BRSKI protocol 
options.</t>

<t>In addition, the table specifies for each context the applicable variation types because these may
differ by context (they do not differ yet with the registrations specified in this document though).</t>

<t>The order in which variation types are specified in this table defines the order in which variation
type values are concatenated to form variation strings.</t>

</section>
<section anchor="variation-type-and-choices-registry-table"><name>Variation Type and Choices Registry Table</name>

<t>The IANA "BRSKI Variations and Variation Strings" registry table, see <xref target="fig-choices"/>, as defined by this document,
defines for each context and variation type the defined choices of that variation type and whether 
a particular choice is a default choice, in which case it does not need to be included in the variation
strings for the context.</t>

<t>This registry also registers the authoritative documentation defining the specific choices.
These specifications may differ for the same choice across different contexts, such as
for "est" between BRSKI and cBRSKI.</t>

<t>The "Context" column lists the BRSKI Variation Context(s) to which this line applies. If it is empty, then the same
Context(s) apply as that of the last prior line with a non-empty Context column.</t>

<t>The "Variation Type" column lists the BRSKI Variation Type to which this line applies. If it is empty, then the
same Variation Type applies as that of the last prior line with a non-empty Variation Type column.</t>

<t>The "Variation Type Choice" column defines a Variation Type Choice for the current context.
All Variation Types and Variation Type Choices <bcp14>MUST</bcp14> be unique strings across all Variation Types
so that variation strings are non-ambiguous.</t>

<t>Variation Types and Variation Type Choices and <bcp14>MUST</bcp14> be strings from lowercase letters a-z and digits 0-9 and <bcp14>MUST</bcp14> start with a letter.
The maximum length of a Variation Type Choice is 12 characters.</t>

<t>The "Reference" column specifies the primary documents which defines the Variation Type Choice use in
the rows context. Further references go into the Note(s) column.</t>

<t>The "Dflt" Flag specifies a Variation Type Choice that is assumed to be the default Choice for the Context,
such as "rrm" for the BRSKI context. Such a Variation Type Choice is assumed to be supported by
responders in discovery if discovery is performed without support of variations. This applies of course
only to responders which support such discovery.</t>

<t>For example, <xref target="BRSKI"/> specifies the empty string "" as the objective-value in <xref target="GRASP"/>
discovery. Because "rrm", "est" and "cmsj" are default in the BRSKI context, discovery
without indication of a variation can support exactly only this variation of "rrm" with
"est" and "cmsj" in the BRSKI context.</t>

<t>The "Dflt<em>" Flag specifies a Variation Type Choice that is only default in a subset of Discovery options in a
context. The Note(s) column has then to explain which subset this is. Like for "Dflt", the signaling in
this subset of Discovery options can then forego indication of the "Dflt</em>" Variation Type Choice.</t>

<t>The "Rsvd" Flag specifies a Variation Type Choice for which no complete specification exist on how to use it
within BRSKI (or more specifically the context), but which is assumed to be of potential implementation interest.
"Rsvd" Variation Type Choices <bcp14>MUST NOT</bcp14> be considered for the  Discoverable Variations table. They are documented
primarily to reserve the Variation Type Choice string.</t>

</section>
<section anchor="variation"><name>Variations and Variation String Registry Table</name>

<t>The IANA "BRSKI Variations and Variation Strings" registry table, see <xref target="fig-variations"/>, as defined by this document,
defines for every necessary context in the "Variation" column the variations which are known to be desired by implementations
as a space separated sequence of variation type values, and as a "-" concatenated variation string in the "Variation String" column.
The space separated sequence does not take defaults into account, the variation string does.</t>

<t>Variation strings may include additional "one-off" variation strings in support of
backward compatibility when the standard scheme does not work.</t>

<t>The "Context" column lists the BRSKI Variation Context(s) to which a line applies. If it is empty, then the same
Context(s) apply as that of the last prior line with a non-empty Context column.</t>

<t>The "Reference" column lists the document(s) that specify the variation, if that variation is
explicitly described. If the variation is not described explicitly, but rather a combination of
Variation Type Choices from more than one BRSKI related specification, then this has to
be explained in the "Explanation / Notes" column.</t>

</section>
</section>
<section anchor="discussion"><name>Discussion</name>

<t>Variations as defined by this document only cover protocol options that proxies can
transparently support so that the definition of variations allows to make proxies automatically
extensible.</t>

<t>Other responder selection criteria such as different responder priority or performance based selection 
(called weight in <xref target="DNS-SD"/>) are not covered by the variation concept but can
be used without change in conjunction with variations.  Some selection criteria may also only work with
discovery mechanisms that rely on specific procedures. Network distance to responder can for example
only be well supported by discovery mechanisms that can support per-hop forwarding between initiator
and responder, such as <xref target="GRASP"/>. Any of these criteria will work unchanged with the introduction
of Variations. Variations are simply one more selection criteria.</t>

<t>Differences in the supported transport stack of a responder are typically included as a
signaling element of the discovery method: Whether TCP or UDP or another IP transport protocol
is used, and whether the responder uses IP or even another network layer protocol.</t>

<t>In "sane" services where a change in transport spec does not imply a change in signalled messages
and their semantics, gateways could transparently proxy from IP and vice versa or
even between TCP and some other IP transport protocols such as SCTP. However, this is out of
scope of this specification.</t>

<t>The procedures specified in <xref target="cPROXY"/> would allow not only to
run a transport stack of COAP over DTLS, but equally any other transport stack over UDP, such
as QUIC - without any changes to the Join Proxy implementation or configuration when following
the procedures described in this dcoument. All that is needed would be to introduce appropriate
registration entries for the registry tables specified in this document (e.g.: add new Variation Type
for transport and choices such as "coaps" or "quic" ).</t>

</section>
</section>
<section anchor="redundant-discovery-and-selection"><name>Redundant Discovery and Selection</name>

<t>The following subsections describe requirements for resilient and scalable responder
selection. Resilience is supported by automatically selecting the currently best available
responder. Scalability of simultaneous sessions is supported through distributing the connections from multiple
initiators to different responders if so desired through operator configuration of the
discovery methods parameters.</t>

<t>At the time of this specification, the relevant initiators are BRSKI pledges, Join Proxies and Registrar-Agents,
the relevant responders are Join Proxies and BRSKI Registrars. Nevertheless, the rules defined
in this document can equally apply to other BRSKI connections if and when discoverable and redundant
services are desired and added to the registries created by this document. For example discovery of MASA by BRSKI
Registrars.</t>

<t>Note that this specification does not mandate support for specific discovery methods in BRSKI
implementations, because this is specific do the target deployment scenarios - hence the
option to support different discovery methods.</t>

<t>Note that while pledges are discoverable in the context of this documents technologies, this section
and its subsections do not apply to discovery of pledges because there is no redundancy involved,
and selection of pledges is also only by their ID and not by their supported variation or context.</t>

<section anchor="responder-selection"><name>Responder Selection</name>

<t>If more than one responder is discovered by an initiator, then the initiator
<bcp14>SHOULD</bcp14> support to sequentially attempt to connect to each feasible responder exactly once until
it successfully connects to one. If it fails to connect to any feasible responder,
the initiator <bcp14>SHOULD</bcp14> wait until at least 30 seconds have elapsed since the start of the
last round and update its discoverable responder information from the discovery mechanism
if that is not already happening automatically by the chosen discovery method before it
restarts connection attempts.</t>

<t>A responder is feasible if it supports one or more of the variations requested by the inititor.</t>

<t>The order of responders to attempt connections to is derived from two criteria: preference and weight.</t>

<t>Preference order is foremost determined by the responders preference across the variations it
supports. Within the set of of responders with the same preference by the initiator because of their
variation, the preference is further determined from discovery method specific preference
parameters such as the "priority" parameter in DNS-SD, or possible future distance
parameters in discovery mechanisms like GRASP.</t>

<t>If a responder socket offers more than one variation supported by the initiator
its preference order is calculated from the most preferred variation supported by it.</t>

<t>Within a set of two or more responders with the same preference, the initiator <bcp14>MUST</bcp14> pick at random,
especially after power-on or other reboot events. This is to ensure that those events have
the chance to overcome possible persistent problems when persistently choosing the same
first responder. If deployments desire reproducable and predictable ordering of connection
attempts by initiators then they have to use the discovery specific mechanisms, such
as a different priority" parameter for each responder in DNS-SD to create such a strict
ordering across the different responder.</t>

<t>Initiators <bcp14>SHOULD</bcp14> support to take discovery mechanism specific weighting 
into account when determining the order of responders with the same preference,
such as the "weight" parameter in DNS-SD.</t>

<t>Support for the so far described resilient selection of responders <bcp14>SHOULD</bcp14> support
selection amongst at least 4 and no more than 10 responders with one or more
supported variation for each supported IP address family (v4 and/or v6). If more responders
are discovered for the preferred variation(s) of the initiator, then it <bcp14>SHOULD</bcp14> pick
a random subset of those responder announcements to select from.</t>

<t>4 Responders for a specific variation are a typical minimum resilience setup in a larger
network setup, in which 2 responders serve as redundancy at the responder host level and
the other 2 responders provide redundancy against network connectivity failure to those
first two responders. Intra-DC and Inter-DC service redundany is a simple example of such a setup.</t>

</section>
<section anchor="service-announcements"><name>Service Announcements</name>

<t>Responder selection as described in <xref target="responder-selection"/> needs to deal with
unresponsive responders because service announcements may be stale. This happens when
service announcements only loosely track aliveness of a service process.</t>

<t>In typical implementations, service announcement may be activated when the
service process starts, and stopped, when it stops. Problems such as a hanging/unresponsible
service process will not be reflected in the service announcement setup. In addition,
caching of service announcements, such as through the DNS TTL field are a further
possible cause of assuming service aliveness that is not correct. Only actual
connection probing or other similar tracking can determine if a service responder is responsive
to the level of accepting connections.</t>

<t>Responders intended to be used in resilient deployments <bcp14>SHOULD</bcp14> therefore ensure
that their service announcements are not active when the responder did or would
have failed to successfully accept connection for 120 seconds or more. This can
be implemented for example by connection probing once every 30 seconds and
withdrawing the service announcements when this fails or by other forms
of tracking responsiveness of the responder functionality.</t>

<t>The better service announcements indicate actual aliveness of the service instances, the
faster service selection will be. In addition, in large networks, backup/standby
service instances can then be implemented by tracking primary service announcemements
and activating the backup only when the primary ones fail. Such dynamic backup
can further reduce the overall load on the discovery mechanism system used and
on initiators.</t>

</section>
<section anchor="proxy-selection"><name>Responder Selection in Proxies</name>

<t>Unless amended by the requirements listed below, proxies <bcp14>SHOULD</bcp14> follow all the
descripton from <xref target="responder-selection"/>.  Note that the randomn selection of
responders with the same preference also applies to stateful proxies and ensures
load balancing (including weighting) across multiple simultaneously connecting pledges.</t>

<t>Stateful proxies <bcp14>SHOULD</bcp14> optimize selection of responders for each variation across
connections for multiple pledges instead of starting the sequence of responders
to try from the highest precedence anew for every new connecting pledge - and repeatedly run
into timeouts for each new connecting pledge when those primary responders time out
on connection attempts because they are unresponsive or unreachable. Instead, after a
responder first fails to connect, the Join Proxy <bcp14>SHOULD</bcp14> skip this responder in further
connection attempts for other connecting pledges.</t>

<t>Stateless proxies can not learn unresponsiveness or unreachability of a responder
through connection attempts. Instead, they <bcp14>SHOULD</bcp14> perform a stateless responsivness/reachability
check for each responder that the Join Proxy is actively forwarding packets to from
one or more pledges.  If no packets are returned from such a responder over a period of more
than 30 seconds, then the responder <bcp14>SHOULD</bcp14> be considered unreachable for at least
180 seconds. Unreachability signaling received in response to packets sent to the
responder <bcp14>SHOULD</bcp14> trigger this unreachability status after it persists for 10 seconds.</t>

<t>Using newly discovered responders in stateless proxies must be done carefully.
Consider the common case that service announcements for a primary responder
did stop due to network issue, the Join Proxy starts to send packets to a secondary
responder, and then the primary responder becomes reachable and the Join Proxy sees
service announcements for it. If the Join Proxy would now start to forward packets
from pledges to this primary responder due to its higher precedence, then this
could unnecessarily break ongoing connections from clients whose packets
are currently forwarded to the lower preference Join Proxy.</t>

<t>Replacing to use a selected responder in a stateless Join Proxy with a better one
<bcp14>SHOULD</bcp14> hence only be done if no packets have been exchanged between pleges
and the current selected responder through the Join Proxy for more than 300 seconds.
This long timeout specifically intends to not break connections in which the
registrar keeps the pledge waiting for an administrative response such as
an operator performing a policy validation for enrollment.</t>

<t>Load balancing as described in <xref target="responder-selection"/> is <bcp14>NOT RECOMMENDED</bcp14> for
stateless proxies because per-pledge stateless load balancing may involve more
processing complexity than feasible for proxies on
constrained devices. To avoid changing the selection of
active responders when one responder becomes unresponsive, a "stable hash" approach would have
to be used, such as described in <xref target="HRW98"/>, which is used for example by <xref target="I-D.ietf-bess-evpn-fast-df-recovery"/>.
Supporting weights with stateless proxying is even more complex. Instead of
load balancing, responders simply need to be designed to scale to the maximum
amount of simultaneous initiator connections necessary when supporting stateless
proxying mode.</t>

</section>
<section anchor="announcement-protection"><name>Protection against malicious service announcements</name>

<t>Initiators including proxies <bcp14>SHOULD</bcp14> always pick the highest possible priority and weight
parameters possible in the discovery mechanism used that allows to support the
desired preference goals. For example, any primary initiator should select the highest
numerical values possible.</t>

<t>This recommendation is intended as a protection against erroneous, but not malicious
service announcements whenever the default priorities are lower than the maximum
priority. It can also serve as a weak protection against malicious announcements
because with the selection rules required by this document, initiators still have
the highest chance of picking the non-malicious announcement.</t>

<t>While being weak, this recommendation can still be better than nothing against such
malicious announcement. These recommendations <bcp14>SHOULD</bcp14> be superceeded by better
recommendations for more narrowly scoped deployment scenarios.</t>

</section>
</section>
<section anchor="join-proxies-support-for-discovery-and-variations"><name>Join Proxies Support for Discovery and Variations</name>

<section anchor="proxy"><name>Join Proxy support for Variations</name>

<t>A Join Proxy compliant with this specification <bcp14>MUST</bcp14> support announcing its
Join Proxy responder socket(s) to which pledges can connect via at least one
of the discovery methods included in the registry tables specified in this
document. The Join Proxy <bcp14>MUST</bcp14> announce the variation(s)
supported on its responder socket(s) according to the registry table entries.</t>

<t>A Join Proxy <bcp14>SHOULD</bcp14> support to pass packets for any variation for which
it has discovered one or more registrar sockets supporting that variation without the
need for the variation to be known at the time of implementation of the Join Proxy
or configured on the Join Proxy. If a Join Proxy supports this requirements, this is
called support for "arbitrary variations". Supporting this requirement requires
the Join Proxy to discover registrar(s) and their supported variation(s) via one or more
of the discovery mechanisms included in the registry tables specified in this document.</t>

<t>Arbitrary variations support allows to deploy proxies once and add
pledges and registrars supporting new variations later - without upgrade
or change of configuration of proxies.</t>

</section>
<section anchor="registrar-operations-modes"><name>Registrar Operations Modes</name>

<t>Proxies may use different approaches to connect to registrars. The following
subsections discuss the primary relevant options.</t>

<section anchor="direct-connection"><name>Direct Connections Mode</name>

<t>In one Join Proxy implementation option called "direct connections", the Join Proxy creates for every discovered registrar
socket a separate Join Proxy responder socket. It announces this socket with the same set of parameters
as it did learn from the registrars service announcement, except for the appropriate Join Proxy service name
and socket parameters (IP address, port number). When a pledge connects to that socket, the
Join Proxy passes traffic for that pledges connection to and from the respective registrar socket.</t>

<t>When using the direct connections approach, the task of selecting the best registrar socket for
a particular variation is left to pledges because they are exposed to at least the same number 
of service announcements from proxies as proxies see service announcements from registrars - and the
pledge has to select the best available one from them.</t>

<t>To reduce the number of sockets that have to be announced by proxies when using direct connections
and to also reduce the number of responder sockets that need to be maintained by a Join Proxy operating
in this approach, these proxies <bcp14>SHOULD</bcp14> limit the number of registrar sockets it maps to between 4 and 10
best registrar sockets as described in <xref target="responder-selection"/> per variation.</t>

</section>
<section anchor="best-registrar"><name>Best Registrar Selection Mode</name>

<t>In the implementation mode "best registrar selection", the Join Proxy creates a separate socket
for a set of all registrar sockets that it discovers and that announce support for the same set
of variations. It then connects pledges to the best available registrar socket from that set.</t>

<t>It then announces this socket with the parameters of the best discovered registrar socket, replacing
the service name and network parameter names with those for its Join Proxy responder socket as in the
case of a direct connection.</t>

<t>When performing best registrar selection, the Join Proxy has to perform selection of the best availalable
responder as described in <xref target="responder-selection"/>.</t>

<t>In addition, stateful proxies implementing best registrar selection <bcp14>SHOULD</bcp14>
optimize selection of registrar for each Join Proxy responder socket across
connections for multiple pledges instead of starting the sequence of responders
to try anew from the highest precedence registrar for every new connecting pledge - and repeatedly run
into timeouts when one or more of the best registrar time out on connection attempts
because they are unresponsive or unreachable. Instead, after a
responder first fails to connect, the Join Proxy <bcp14>SHOULD</bcp14> skip this responder in further
connection attempts for other connecting pledges and re-consider it only for new
connection attempts after at least 60 seconds.</t>

<t>Stateless proxies can not learn unresponsiveness or unreachability of a responder
through connection attempts. Instead, they <bcp14>SHOULD</bcp14> perform a stateless responsivness/reachability
check for each responder that the Join Proxy is actively forwarding packets to from
one or more pledges.  If no packets are returned from such a responder over a period of more
than 30 seconds, then the responder <bcp14>SHOULD</bcp14> be considered unreachable for at least
180 seconds. Unreachability signaling received in response to packets sent to the
responder <bcp14>SHOULD</bcp14> trigger this unreachability status after it persists for 10 seconds.</t>

<t>Using newly discovered responders in stateless proxies supporting best registrar selection must be done carefully.
Consider the common case that service announcements for a primary responder
did stop due to network issues, now the Join Proxy starts to send packets to a secondary
responder, and then the primary responder becomes reachable and the Join Proxy sees
service announcements for it. If the Join Proxy would now start to forward packets
from pledges to this primary responder due to its higher precedence, then this
could unnecessarily break ongoing connections from clients whose packets
are currently forwarded to the lower preference Join Proxy. Direct connection mode does
not incur this problem, because the pledge can select another Join Proxy responder socket
when it discovers the first one to be unresponsive or erroneous.</t>

<t>Replacing to use a selected responder in a stateless Join Proxy with a better one
<bcp14>SHOULD</bcp14> hence only be done if no packets have been exchanged between pleges
and the current selected responder through the Join Proxy for more than 300 seconds.
This long timeout specifically intends to not break connections in which the
registrar keeps the pledge waiting for an administrative response such as
an operator performing a policy validation for enrollment.</t>

</section>
<section anchor="proxy-in-service-name-only-mode-on-registrars"><name>Proxy in Service Name Only Mode on Registrars</name>

<t>Registrars that implement support for connections from stateful proxies
and/or from pledges may minimize their Join Proxy implementation work by only implementing
the appropriate service name announcements for the same socket to support
connections from both:  announcements as a registrar for connections from
proxies and announcements as a Join Proxy for connections from pledges.
No additional sockets or other Join Proxy specific packet processing code
is required to support this.</t>

<t>Registrars that implement support for connections from stateless proxies can
share that implementation for connections from pledges by also implementing
simple UDP&lt;-&gt;JPY header conversion (see <xref target="cPROXY"/>).
Nevertheless, they do need to do this via
a separate socket and hence need to announce the two sockets separately:
UDP for connections pledges with the Join Proxy service name, and UDP with JPY header for 
connections from stateless proxies with the stateless registrar service name.</t>

<t>Proxy functionality that is implemented as described here on registrars
is called "proxy in service name only mode", because such an implementation
can not discover, select and fail over between different registrars.
Such proxies in name only therefore do not share requirements
against discovering and selecting registrars described for the prior specified
modes.</t>

<t>Like other proxies, proxies in name only <bcp14>SHOULD</bcp14> nevertheless track
aliveness of their registrar function and withdraw its service
announcements (both as Join Proxy as well as as registrar) when it does not run,
fails or becomes unresponsive.</t>

<t>Proxies in name only <bcp14>SHOULD</bcp14> default to the same discovery method priority and
weight parameter as those configured for the registrar service announcements.
This is so that in the absence of separate proxies in the network selection
of registrars co-located proxies would follow the same criteria as those
used by proxies and which use the registrar service announcement parameters.</t>

</section>
<section anchor="proxy-mode-discussion"><name>Proxy Mode Discussion</name>

<t>This document defines no requirements against the implementation mode for proxies.
Those are left for solution or deployment (profile) specifications. Instead, this
section discusses some considerations for those choices.</t>

<t>The list of possible modes presented is exemplary and not meant to be exhaustive.
Other modes are equally able to support the requirements, such as mixtures
of the described modes. Likewise, introduction of new variations may not
only work well via arbitrary variation support in proxies, but through
explicit configuration of variations on proxies - this all depends on
the target deployment environment. The presented modes where choosen
primarily as the ones providing most configuration free deployment options and
for registrar implementations most simplicity in implementation.</t>

<t>If a deployment has a larger number of service announcements and (extremely)
constrained pledges, direct connection mode may be inappropriate because it shifts
the burden of best available discovery and selection and onto the pledge. If
simultaneously proxies in such deployments can support more scalable complex implementations,
then best registrar selection mode may be most appropriate.</t>

<t>In environments, where all pledges are expected to become proxies after enrollment,
implementers may simply want to implement the option for which both pledge and
Join Proxy code together is easiest to implement.</t>

<t>Even on registrars, proxy in service name only mode may not suffice deployment requirements
or provide best redundancy.  For example, the co-located registrar may incur 
problems, not applicable to alternative registrars, such as for example Internet
connectivity problems to MASAs when different registrars have different
Internet connectivity. If the registrar co-located Join Proxy is then
still the only Join Proxy available to some candidate pledges, then this Join Proxy
needs to be able to connect to an alternative registrar, which would
not be possible if it was a proxy in service name only.</t>

<t>Likewise, proxy in service name only mode will disturb the introduction of new variations
on pledges and other registrars in the network if the registrar node implementing
proxy in service name only mode becomes a necessary Join Proxy for a pledge requiring a
variation not supported by this registrar, but by another registrar that
would only be reachable through this registrar node. Therefore, Join Proxy
in name only mode is best suited for node types not deployed on an edge
of the network where a future variety of pledges may connect to, and those
pledges will require the use of a Join Proxy.</t>

</section>
</section>
<section anchor="extensibility-to-non-brski-services"><name>Extensibility to non BRSKI services</name>

<t>Join Proxy implementations using the procedures described in this document can easily
be reused for any other protocols beside BRSKI as long as they use TCP or UDP.
For this, it would simply be required that the Join Proxy can be configured with
pairs of service names other than those used by BRSKI/cBRSKI: A service name to
discover, and a service name to use for the Join Proxy responder socket service announcements.</t>

</section>
<section anchor="scaling-service-discovery-and-selection"><name>Scaling service discovery and selection</name>

<t>Discovering and selecting an available service instance can become a design challenge
in large networks with many redundant service announcements.</t>

<t>Consider for example the common cade of allowing BRSKI registration in a network
with many geographically spread out sites such as in enterprise,  industrial or
building construction environments. During initial bringup of such sites, 
Internet connectivity may be non-existing, or intermittant, and hence one or more
local registrar in each such site is higly desirable. Such registrars may of course
require private mobile network connectivity to MASA, or rely on out-of-band provisioning
of vouchers.</t>

<t>Later, when such a site does get a well working wide-area network connection,
it may be more appropriate to use more centralized registrars, but a local registrar
as a backup may be considered useful. However, if the service announcements of such
per-site decentralized registrars would be discoverable across the whole geographically
spread out network, then this could introduce a potentially significant
overhead to the service announce and discovery system when for example more
than 100 registrar service announcments exist in the network, and pledges/proxies
connect to them.</t>

<t>Such large number of redundant service announcements is typically highly undesirable,
and appropriate configurations of service discovery mechanisms need to be used
to avoid them. For example, in GRASP, service announcements can be scoped to small hop counts,
Anycast addressing can be used to make all decentralized registrars overload
the same ip address, and hence make them all share the same service announcement.</t>

</section>
</section>
<section anchor="brski-pledge"><name>Discoverable BRSKI Pledges</name>

<section anchor="brski-pledge-context"><name>BRSKI-PLEDGE context</name>

<t>BRSKI-PLEDGE is the context for discovery of pledges by nodes such as Registrar-Agents.
Pledges supporting <xref target="BRSKI-PRM"/> <bcp14>MUST</bcp14> support it. It may also be used by other variations of BRSKI
outside of the PRM use case, for example for inventorizing pledges.</t>

<t>Pledges supporting BRSKI-PLEDGE <bcp14>MUST</bcp14> support DNS-SD for discovery via mDNS, using link-local scope.
For DNS-SD discovery beyond link-local scope, pledges <bcp14>MAY</bcp14> support DNS-SD via <xref target="DNSSD-SRP"/>.</t>

<t>DNS-SD WG Question TBD: Is there sufficient auto-configuration support in <xref target="DNSSD-SRP"/>, that pledges without any
configuration can use it, and if so, do we need to raise specific additional requirements to enable this
in pledges ?</t>

<t>These DNS-SD requirements are defaults. Specifications for specific deployment contexts such as specific
type of radio mesh network solutions may need to specify their own requirements overriding or amending these
requirements.</t>

<t>Pledges <bcp14>MUST</bcp14> support to be discoverable via their DNS-SD service instance name.</t>

<t>Pledges <bcp14>SHOULD</bcp14> support to be discoverable via DNS-SD browsing, so that Registrar-Agents can find
unexpected pledges or can easier enumerate expected pleges, especially in the presence of multiple
different subnets and use of mDNS. A pledge can also only be found by browsing if it is not
possible for the owner to aquire serial-number information of a pledge by the time BRSKI-PRM  needs it
(to create a service instance name).</t>

<t>When pledges are discoverable vis DNS-SD browsing, the "brski-registrar" PTR service name is a
so-called shared resource record. When it is requested via mDNS (multicast), all pledges supporting
BRSKI-PLEDGE and browsing will respond simultaneously, potentially creating congestion/contention.
To avoid this, <xref target="mDNS"/> specifies the following requirement: "each responder <bcp14>SHOULD</bcp14> delay its
response by a random amount of time selected with uniform random distribution in the range 20-120 ms."</t>

<t>It is equally <bcp14>RECOMMENDED</bcp14> to apply the same random delay rule for answers to multicasted or
flooded queries in other discovery mechanisms that have the same response burst problem - even when
they do not specify such a mechanism, such as in GRASP.</t>

<t>If browsing is not desired by a pledge, the pledge does simply not respond to queries for the
"brski-registrar" service name in mDNS or other discovery mechanism queries for the equivalent
service name, or does not register its PTR RR for this service name when using unicast DNS-SD via
<xref target="DNSSD-SRP"/>. This does not affect operations for the service instance name.</t>

</section>
<section anchor="service-instance-name"><name>Service Instance Name</name>

<t>The service instance name chosen by a BRSKI pledge <bcp14>MUST</bcp14> be composed from information which is</t>

<t><list style="symbols">
  <t>Easily known by BRSKI operations, such as the operational personnel or software automation,
specifically sales integration backend software.</t>
  <t>Available to the pledge software itself, for example by being encoded in some attribute of the IDevID.</t>
</list></t>

<t>Typically, a customer will know the serial number of a product from sales information, or even
from bar-code/QR-codes on the product itself. If this serial number is used as the service instance
name to discover a pledge from a Registrar-Agent, then this may potentially (but unlikely) lead to (duplicate) replies
from two or more pledges having the same serial number, such as in the following cases:</t>

<t><list style="numbers">
  <t>A manufacturer has different product lines and re-uses serial-numbers across them.</t>
  <t>Two different manufacturer re-use the same serial-number space.</t>
</list></t>

<t>If pledges enable browsing of their service instance name, they <bcp14>MAY</bcp14> support DNS-SD specified
procedures to create unique service instance names when they discover such clashes, by appending
a space and serial number, starting with 2 to the service instance name: "&lt;service-instance-name&gt; (2)",
as described in <xref target="DNS-SD"/> Appendix D.</t>

<t>Nevertheless, this approach to resolving conflicts is not desirable:</t>

<t><list style="symbols">
  <t>If browsing of DNS-SD service instance name is not supported, Registrar-Agents would have to
always (and mostly wrongly) guess that there is a clash and (mostly unnecessarily) search
for "&lt;service-instance-name&gt; (2)".</t>
  <t>If a clash exists between pledges from the same manufacturer, and even if the Registrar-Agent
then attempts to start enrolling all pledges with the same clashing service instance name,
it may not have enough information to distinguish pledges other than by the randomn numbering. This would happen
especially if the IDevID from both devices (of different product type), had the same serial
number, and the trust anchor certificate of both was the same (e.g. same root CA certificate), which is likely when they are from the same manufacturer.
Even if some other IDevID field was used to distinguish their device model, the Registrar-Agent
would not be able to determine that difference without additional vendor specific programming.</t>
</list></t>

<t>In result:</t>

<t><list style="symbols">
  <t>Vendors <bcp14>MUST</bcp14> document a scheme how their pledges form a service instance name from
information available to the customer of the pledge.</t>
  <t>These service instance names <bcp14>MUST</bcp14> be unique across all IDevID of the manufacturer that
share the same trust anchor.</t>
</list></t>

<t>The following mechanisms are recommended:</t>

<t><list style="symbols">
  <t>Pledges <bcp14>SHOULD</bcp14> encode manufacturer unique product instance information in their
subject name serialNumber. <xref target="RFC5280"/> calls this the X520SerialNumber.</t>
  <t>Pledges <bcp14>SHOULD</bcp14> make this serialNumber information consistent with easily accessible
product instance information when in physical possession of the pledge, such as
product type code and serial number on bar-code/QR-code to enable <xref target="BRSKI-PRM"/> discovery
without additional backend sales integration. Note that discovery alone does not
allow for enrollment (so it does not introduce a security risk by itself)!</t>
  <t>Pledges <bcp14>SHOULD</bcp14> construct their service instance name by concatenating
their X520SerialNumber with a domain name that is used by the manufacturer
and thus allows to disambiguate devices from different manufacturer using the
same serialNumber scheme, and hence the likelihood of service instance name clashes if manufacturer names are not used.</t>
  <t>Pledges <bcp14>MAY</bcp14> re-use the service instance name as their host name in their AAAA or A RRs.</t>
</list></t>

</section>
<section anchor="example"><name>Example</name>

<t>This section discusses an example manufacturers approach using the recommendations
from above.  <xref target="service-name-example"/> shows the different data involved in DNS-SD records
for a pledge from manufacturer "Example".</t>

<figure title="Example IDevID and DNS-SD data" anchor="service-name-example"><artwork><![CDATA[
    1. Manufacturer published information:
    
      1.1 IDevID trust anchor certificate.
    
      1.2 IDevID X520 identification schema:
        Brand: Example
          O = example.com, serialNumber = "PID:Model-<PID> SN:<SN>"
          ; Explanation:
          ; SN = Serial Number, PID = Product Identifier
          ; O = Organization
    
      1.3 DNS-SD Instance Schema:
        <X520SerialNumer>.example.com
    
    2. Example Purchase Order Pledge Information
       Brand: Example, Model: 0815, Serial: WLDPC2117A99
    
    3. DNS-SD Instance string:
      "PID:Model-0815 SN:WLDPC2117A99.example.com"
    
    4. DNS-SD RR for the pledge (using mDNS, hand hence .local):
      ; PTR RR to support discovering the pledge through browsing,
      ; e.g. when the serial number is not known in advance
      _brski-pledge._tcp.local  IN PTR
        PID:Model-0815\\ SN:WLDPC2117A99\\.example\\.com._brski-pledge._tcp.local
    
      ; SRC and TXT RR for the service instance name
      PID:Model-0815\\ SN:WLDPC2117A99\\.example\\.com._brski-pledge._tcp.local
        IN SRV 1 1
        PID:Model-0815\\ SN:WLDPC2117A99\\.example\\.com.local
      PID:Model-0815\\ SN:WLDPC2117A99\\.example\\.com._brski-pledge._tcp.local
        IN TXT ""
    
      ; AAAA address resolution for the target host name
      PID:Model-0815\\ SN:WLDPC2117A99\\.example\\.com.local
        IN AAAA fda3:79a6:f6ee:0000::0200:0000:6400:00a1
    
    5. Example Pledge IDevID certificate information:
        ; Format as shown by e.g.: openssh
        Subject: serialNumber = "PID:Model-0815 SN:WLDPC2117A99",
         O = example.com, CN = Model-0815
]]></artwork></figure>

<t>Using the information from the above Example picture, a Registrar-Agent
implementation operates as follows.</t>

<t><list style="numbers">
  <t>Initially, it is configured with the Manufacturer published information (1.),
and as not shown it will likely have a list of such information for various
brands of products.</t>
  <t>After a pledge purchase and initial physical deployment,
it is provided with the Purchase Order information for the pledge (2.),
this order information tells it, that the Manufacturers Brand is "Example",
that the pledge product Model &lt;PID&gt; is "0815" and its Serial Number &lt;SN&gt;
"WLDPC2117A99".</t>
  <t>It looks up the IDevID X520 identification schema for brand "Example" and
uses the template value for the serialNumber field together with the
pledge information values from (2.) for O, &lt;PID&gt; and &lt;SN&gt; to determine 
the DNS-SD Instance of the pledge (3.). That instance is the concatenation
of the X520 serialNumber value of the pledge with the Organization
domain name of the manufacturer. With the Organization being a global
DNS domain "example.com", including this in the Instance makes it unique
across manufacturers.</t>
  <t>It then uses standard DNS-SD via mDNS to find the pledge, using the DNS-SD 
Resource Records (RR) shown in 4.</t>
  <t>Once it receives a response from the device claiming to be the pledge,
it can use any appropriate authentication mechanism to validate
ownership of the IDevID private key. In <xref target="BRSKI-PRM"/> this is done through
the initial TLS handshake in which it learns the presumed IDevID of the
pledge. When the signature in the IDevID matches the public key of the
desired Manufacturer from (1.1), then it trusts that this pledge is from
that manufacturer. When the O and serialNumber of the certificate match
what it constructed from the &lt;PID&gt;/&lt;SN&gt; values from purchase information 
from (3.) then it also trusts that this is indeed the pledge it was
looking for.</t>
</list></t>

<t>Instead of using sales receipt information, the customer may also use scanned
QR/Barcode or RF-Tag information from packaging after receiving shipments for
example for step 2. Scanning packaging information will likely will introduce additional
complexity because the manufacturer name can often only be derived from
information such as EAN-13 barcodes.</t>

<t>The process steps may also be simpler if the customer can know the IDevID of the pledge
through the purchase process instead of having to match the IDevID from sales receipt information
(step 2).</t>

<t>The process steps may also become more complex. The manufacturer may have multiple
brands using the same trust anchor. Or the manufacturer may have certificate
chains and different production sub-companies may use different sub-CA certificates in the signing
chain. Or the serialNumber alone is not unique across the certificate chain,
but further Subject fields of the certificate are required for a unique
identification, such as the O)rganization field. It could contain for example
one out of multiple brand names that use simple numerica serialNumber formats
and hence could collide.  None of such complexities are desirable for new designs,
but they may be necessary to support BRSKI for existing products.</t>

<t>For the described mechanism to work, the manufacturer does not necessarily
have to own a domain name such as "example.com" in the example. Owning a
domain name and using it for the DNS-SD Instance Schema is just a simple
way to ensure usage of a unique Instance Schema - if all manufacturers
agree to use this approach.</t>

<t>The RR used to discover the pledge by its serial number is the
"IN SRV" RR.  The "IN PTR" RR is optional and allows for the pledge to
be discovered with DNS-SD browsing, which is necessary if the
pledges serial number information can not be known by the time the
pledge needs to be enrolled by a Registar-Agent.</t>

<t>The instance string is also re-used in the host name of the "IN SRV"
RR and hence the domain name of the "IN AAAA" RR. The is just an option,
and the pledge can use whatever host name it wants.</t>

</section>
<section anchor="webpki-derived-instance-schema"><name>WebPKI derived instance schema</name>

<t>There is currently no automated mechanism to avoid the configuration of
manufacturer trust anchor certificates in BRSKI components that need to
authenticate pledges. However, the configuration of additional instance
schemas for different manufacturer device names in BRSKI
equipment could be avoided if it is deemed appropriate by vendors and
operators of BRSKI-PLEDGE installations to rely on WebPKI trust anchors.</t>

<t>The trust anchor certificate itself (or a sub-CA in the certificate chain)
would then have to have a WebPKI trust anchor signature and a DNS Name
that can easily be identified as being used for IDevID, such as
"*.idevid.example.com". And the implied schema for the instance
string is then "&lt;&lt;X520SerialNumer&gt;.DNS-name&gt;", authenticating instance
names of the format "&lt;X520SerialNumer&gt;.idevid.example.com&gt;".</t>

<t>Obtaining a WebPKI signature for their trust anchor for these wildcard domain
names from a WebPKI trust anchor is the added effort for manufacturer of this scheme.</t>

</section>
</section>
<section anchor="variation-signaling-and-encoding-rules-for-different-discovery-mechanisms"><name>Variation signaling and encoding rules for different discovery mechanisms</name>

<section anchor="dns-sd"><name>DNS-SD</name>

<section anchor="signaling"><name>Signaling</name>

<t>The following definitions apply to any instantiation of DNS-SD including DNS-SD via mDNS as defined in
<xref target="DNS-SD"/>, but also via unicast DNS, for example by registering the necessary DNS-SD Resource Records (RR) 
via <xref target="DNSSD-SRP"/>.</t>

<t>Because of the different options of how to run DNS-SD, the requirements in this document do not guarantee
interoperability when using DNS-SD. One side could use unicast DNS-SD, the other mDNS, and there may be
no mapping between the two. Therefore the recommendations in this document need to be amended
with deployment specific specifications / requirements as to which signaling variation, such as mDNS
or unicast DNS with SRP is to be supported between initiator and responder. When using unicast DNS
(with SRP), additional mechanisms are required to learn the IP address(es) of feasible DNS and
SRP servers, and deployment may also need agreements for the (default) domain they want to use in
unicast DNS. Hence, a mandatory to implement (MTI) profile is not feasible because of the wide range
of variations to deploy DNS-SD.</t>

<t>In the absence of overriding deployment profile requirements, implementations are
<bcp14>RECOMMENDED</bcp14> to support mDNS and <bcp14>MAY</bcp14> support <xref target="DNSSD-SRP"/> and fall back to mDNS
if <xref target="DNSSD-SRP"/> fails to work, e.g.: it fails to discover SRP server and/or default domain.</t>

</section>
<section anchor="variation-string-encoding"><name>Variation String Encoding</name>

<t>Variation Strings from the IANA registry <xref target="fig-variations"/> are encoded as DNS-SD Keys with
a value of 1 in the DNS-SD service instances TXT RR using the shortened encoding of "key" instead of "key=1".
In result, the value of the TXT RR is a sequence of zero terminated strings, each one indicating a single supported
variation type choice.</t>

<t>A variation may have the option of being represented by the empty string "". This is not allowed
in the DNS-SD encoding, and instead the alternative variation string <bcp14>MUST</bcp14> always be used for DNS-SD.</t>

<t>Variation strings in DNS-SD are case insensitive as required by DNS-SD. It is <bcp14>RECOMMENDED</bcp14> to only
announce lowercase variation strings in DNS-SD.</t>

<t>The use of variation strings can easily break the DNS-SD rule that they keys should be no more than
9 characters long. This is justified by the absence of value fields to keep the total length of the
TXT RR reasonably short.</t>

</section>
<section anchor="service-instance-and-host-names"><name>Service Instance and Host Names</name>

<t>To be able to specify for each responder socket individually its supported variations as well
as its selection criteria (priority weight), it needs to be represented in DNS-SD as a
service instance name with an SRV and TXT RR. In BRSKI-PLEDGE <xref target="brski-pledge"/> the service instance
name is significant as it is what a Registrar-Agent may need to to discover, but in BRSKI and cBRSKI
it is merely an artefact of DNS-SD encoding: Unlike typical user-centric DNS-SD use-cases, there are
no users that need to make sense of the meaning of the service instance name, for example to know,
which printer to to pick. Only operators may need to look at them for troubleshooting.
The choice of instance name (the first component of a service instance name) is hence arbitrary. The same
is true for the host names used in the DNS-SD records for BRSKI.</t>

<t>Registrars <bcp14>SHOULD</bcp14> support automatic generation of their service instance name for their DNS-SD
operation to avoid additional need for operator configurations. Registrars <bcp14>SHOULD</bcp14> likewise support the
configuration of such a name - if the operator so desires to support operational troubleshooting.</t>

<t>If the host on which the registrar is running already has a DNS host name for the IP addresses
used by the registrar and for the desired DNS method (mDNS = .local, unicast DNS = default domain),
then the registar <bcp14>SHOULD</bcp14> be able to use that host name as the target domain name in the SRV RR.
This requirement avoids the unnecessary addition of DNS A/AAAA RRs because of the registrar,
when useable RRs already exist.</t>

<t>If such a DNS RR does not exist, but a DNS host name for a different DNS method, or a different set of
addresses than used by the registrar, then the registrar <bcp14>MAY</bcp14> be able to use a target domain
name derived from that primary domain name by appending a unique name element. This requirement
exist to avoid the creation of unnecessarily inconsistent host names.</t>

<t>If no DNS host name exists, the registrar <bcp14>MUST</bcp14> be able to automatically create a DNS host name
and the A and/or AAAA RRs for the address(es) used by the registrar for use in the SRV RR target field.
This requirement exists to ensure that operators are not unnecessary required to configure a host name
on a system that does not need one - and none is required to run a registrar.</t>

<t>A registrar <bcp14>MAY</bcp14> use any unique identifiers of its host system as its instance name or host name.
This can avoid or at least minimize the need to automatically pick another name in case the chosen
name is already taken by another system. This for example would happen if a registrar tried to
use an instance component such as "registrar" and there is already another registrar. Using a
known unique identifier allows a registrar to raise an alert and claim an operational error 
with a high degree of confidence.</t>

<t>MAC addresses are only unique when an application such as a registrar understand what hardware it
is running on, and that the MAC address was assigned by registering its OUI with IEEE and that
MAC addresses from the OUI where assigned uniquely. This is for example not necessarily the
case for IoT equipment or registrars running in a virtual context in the cloud. IP addresses
can be assumed to be unique (enough) when they have globals scope or ULA.</t>

<t>When registrar software does not know that no other registrar software or instance of the same
software may run on the same host (for example when being packaged as an application), the
registrar <bcp14>SHOULD</bcp14> not assume that a host unique name, is actually unique, but instead disambiguate
it by appending an additional name element to make it unique, such as a process number of the
running process.</t>

<t>Picking well-known or unique identifiers for registrar also helps operator to troubleshoot by often
eliminating the need to also know the IP addresses associated with the name.</t>

<t>Target host names need to follow the requirements for host names. By those requirements, it is not
permitted to use ":" in target host names, for example as part of MAC or IP address based host names.
instance names do not share this limitation, but it <bcp14>SHOULD</bcp14> be useful to pick the same host name requirements
based encoding format for both type of DNS RR nams when using encoded addresses in them. For example
by replacing ":" as commonly used with "-".</t>

<t>If the responder needs to indicate different sockets for different (set of) variations, for example,
when operating as a Join Proxy, according to <xref target="proxy"/>, then it needs to signal for each socket a
separate service instance name with the appropriate port information in its SRV record and the
supported variations for that socket in the TXT Record of that service instance name. A responder
<bcp14>MAY</bcp14> create the instance and host name for such different variation sockets by appending the variation
string to the previously determined instance and host names.</t>

</section>
<section anchor="examples"><name>Examples</name>

<t>These example use OUI and IPv6 addresses reserved for documentation
purposes. Do not re-use these addresses in actual deployments</t>

<figure title="DNS-SD for single registrar supporting BRSKI/cBRSKI variations" anchor="dnssd-example-1"><artwork><![CDATA[
# BRSKI
_brski-registrar._tcp.local
               IN PTR  0000-5e00-5314._brski-registrar._tcp.local
0000-5e00-5314._brski-registrar._tcp.local
               IN SRV  1 2 4555 0000-5e00-5314.local
0000-5e00-5314._brski-registrar._tcp.local
               IN TXT  "est-tls" "prm-jose" "cmp"

# cBRSKI
_brski-registrar._udp.local
                IN PTR  0000-5e00-5314._brski-registrar._udp.local
0000-5e00-5314._brski-registrar._udp.local
                IN SRV  1 2 5684 0000-5e00-5314.local
0000-5e00-5314._brski-registrar._udp.local
                IN TXT  "rrm-cose"

# Host name
0000-5e00-5314.local
               IN AAAA  2001:DB8:0815::5e00:5314
]]></artwork></figure>

<t>In example <xref target="dnssd-example-1"/>, a registrar on a router, that is using mDNS for being discovered
supports BRSKI with "rrm" and "prm" modes across the same TCP socket port 4555, with "est" and "cmp".
This leads to the three supported and IANA registry defined variations "est-tls", "prm-jose", and "cmp".
For cBRSKI (UDP), it supports the only variation registered through this document, "rrm-cose".</t>

<t>Such a registrar implementation might even support a combination of "prm" with "jose" and "cmp",
but at the time of this specification, this exact interoperability aspects of such a combination
have at the time of writing of this spec not been investigated and hence it is not listed 
in the IANA registry. Nevertheless, this may happen later, so it is useful for registrar
implementations to allow configuration of variations for its service announcements to allow
operational modifications.</t>

<t>This registrar implementation is running on a router that otherwise has no for a 
host name registered in DNS or DNS-SD, so it is using it's MAC-address as its target host name,
"0000-5e00-5314.local", the same name is used in the registrar service instance names.
Running on a router without modular software, the registrar knows that no other registrar
instances can run on the same host and hence the name has no further disambiguating elements.</t>

<t>Note also that there is never a need for two different service instance names between
BRSKI and cBRSKI, because they are distinguished bt the "_tcp" versus "_udp" component of the service
instance name.</t>

<figure title="DNS-SD for a BRSKI registrar applications" anchor="dnssd-example-2"><artwork><![CDATA[
# BRSKI registrar application
_brski-registrar._tcp.example.org
     IN PTR  noc-registrar-brski-37253._brski-registrar._tcp.example.org
noc-registrar-brski-37253._brski-registrar._tcp.example.org
     IN SRV  1 2 4555 noc-registrar.example.org
noc-registrar-brski-37253._brski-registrar._tcp.example.org
     IN TXT "est-tls" "cmp"

# cBRSKI registrar application
_brski-registrar._udp.example.org
     IN PTR  noc-registrar-cbrski-5376._brski-registrar._udp.example.org
noc-registrar-cbrski-5376._brski-registrar._udp.example.org
     IN SRV  1 2 7533 noc-registrar.example.org
noc-registrar-cbrski-5376._brski-registrar._udp.example.org
     IN TXT "rrm-cose"

# BRSKI-PRM application
_brski-registrar._tcp.example.org
               IN PTR noc-registrar-prm-9735._brski-registrar._tcp.example.org
noc-registrar-prm-9735._brski-registrar._tcp.example.org
               IN SRV 1 2 17355 noc-registrar.example.org
noc-registrar-prm-9735._brski-registrar._tcp.example.org
               IN TXT "prm" 

# Host name
noc-registrar.example.org
               IN AAAA  2001:DB8:0815::5e00:5333
]]></artwork></figure>

<t>In the second example <xref target="dnssd-example-2"/>, a server system in the NOC of customer with
domain example.org is set up as the registrar for various BRSKI options. It uses <xref target="DNSSD-SRP"/>
to register its DNS-SD names into the example.org domain which it discovers as the default domain.
The host name of the server is set to noc-registrar.example.org.</t>

<t>The operator installs three separate registrar applications on this server.
One from a vendor whose pledges use BRSKI, one from an integrator supporting pledges
from various "IoT" vendors that usecBRSKI, and one from a manufacturer that has
pledges using BRSKI-PRM.</t>

<t>Each of the three applications operates the same way for discovery. It opens a socket for
its registrar responder and notes the port number it receives. It determines that
SRP is useable, that the default domain is "example.org", and that the host name
is noc-registrar. It then forms a unique name from noc-registrar by appening
some string  abbreviation indicating its mode of operation ("brski", "cbrski", "prm"),
and it's numeric process identifier - just in case more than one instance of the
same application can be started. It then publishes its PTR, SRV and TXT DNS-RR,
using these creates unique service instance names, the respective port number in the
SRV RR and the variation(s) in the TXT RR.</t>

</section>
</section>
<section anchor="grasp"><name>GRASP</name>

<section anchor="signaling-1"><name>Signaling</name>

<t>This document does not specify a mandatory to implement set of signaling options to guarantee
interoperability of discovery between initiator and responders when using GRASP. Like for the
other discovery mechanisms, these requirements will have to come from other specifications
that outline what in <xref target="GRASP"/> is called the "security and transport substrate" to be used for
GRASP.</t>

<t><xref target="ACP"/> specifies one such "security and transport substrate", which is zero-touch deployable.
It is mandatory to support for initiators and responders implementing the so-called
"Autonomic Network Infrastructure" (ANI). DULL GRASP is used for link-local discovery of
proxies, and the ACP is used to automatically and securely build the connectivity for multi-hop discovery
of registrars by proxies.</t>

</section>
<section anchor="encoding-and-examples"><name>Encoding and Examples</name>

<t>To announce protocol variations with <xref target="GRASP"/>, the supported Variation is indicated in the
objective-value field of the GRASP objective, using the method of forming the Variation string term
in <xref target="variation"/>, and listed in the Variation String column of the <xref target="fig-variations"/> table.</t>

<t>If more than one Variation is supported, then multiple objectives have to be announced, each with
a different objective-value, but the same location information if the different Variations can be
supported across the same socket because they will all be connected to the same registrar.
Different sockets require different objective structures in GRASP anyhow.</t>

<t>Compared to DNS-SD, the choice of encoding for GRASP optimizes for minimum parsing effort, whereas
the DNS-SD encoding is optimized for most compact encoding given the limit for DNS-SD TXT records.</t>

<figure title="GRASP example for a BRSKI registrar supporting RRM and PRM" anchor="grasp-example-1"><artwork><![CDATA[
[M_FLOOD, 12340815, h'fe800000000000000000000000000001', 180000,
    [
     [["AN_Join_Registrar", 4, 255, ""],
      [O_IPv6_LOCATOR,
       h'fe800000000000000000000000000001', IPPROTO_TCP, 4443]],

     [["AN_Join_Registrar", 4, 255, "prm"],
      [O_IPv6_LOCATOR,
       h'fe800000000000000000000000000001', IPPROTO_TCP, 4443]],

     [["AN_Join_Registrar", 4, 255, "rrm"],
      [O_IPv6_LOCATOR,
       h'fe800000000000000000000000000001', IPPROTO_UDP, 4684]]

     [["AN_Join_Registrar_rjp", 4, 255, "rrm"],
      [O_IPv6_LOCATOR,
       h'fe800000000000000000000000000001', IPPROTO_UDP, 4686]]
    ]
]
]]></artwork></figure>

<t><xref target="grasp-example-1"/> is an example for a GRASP service announcement by a registrar in support of BRSKI
with both "rrm" and "prm" supported on the same TCP port 4443 and for cBRSKI (COAP over DTLS) on UDP
port 4684 in stateful mode and port 4686 for stateless mode . The first variation for "rrm" uses an objective-value of ""
for backward compatibility with <xref target="BRSKI"/> where it was introduced. With cBRSKI introducing definitions
for the use of GRASP only with this document, this special case is not proliferated, which is why "rrm" is
used in the cBRSKI announcements.</t>

<t>Note that one or more complete service instances (in the example 3) can be contained within a single GRASP message
without the need for any equivalent to the Service Instance Name of the DNS-SD PTR RR or the
Target name of the DNS-SD SRV RR. DNS-SD requires them because its encoding is
decomposed into different RR, but it also intentionally introduces the Service Instance Name
as an element for human interaction with selection (browsing and/or diagnostics of selection),
something that the current GRASP objective-value encoding does not support.</t>

<figure title="GRASP example for a BRSKI Join Proxy supporting RRM and PRM" anchor="grasp-example-2"><artwork><![CDATA[
[M_FLOOD, 12340815, h'fe800000000000000000000000000001', 180000,
   [
    [["AN_Join_Registrar", 4, 1, ""],
     [O_IPv6_LOCATOR,
      h'fe800000000000000000000000000001', IPPROTO_TCP, 5553]],

    [["AN_Join_Registrar", 4, 1, "prm"],
     [O_IPv6_LOCATOR,
      h'fe800000000000000000000000000001', IPPROTO_TCP, 5555]],

    [["AN_Join_Registrar", 4, 1, "rrm"],
     [O_IPv6_LOCATOR,
      h'fe800000000000000000000000000001', IPPROTO_UDP, 5684]],

    [["AN_Join_Registrar_rjp", 4, 1, "rrm"],
     [O_IPv6_LOCATOR,
      h'fe800000000000000000000000000001', IPPROTO_UDP, 5686]],
   ]
]
]]></artwork></figure>

<t><xref target="grasp-example-2"/> shows a corresponding GRASP service announcement by a Join Proxy that
did discover the registrar from <xref target="grasp-example-1"/> and is now announcing the services that
it can now proxy. Whereas registrar announcements as in <xref target="grasp-example-2"/> typically
use TTL of 255 to be seen across the whole network, Join Proxy announcements are
only intended to reach link local neighboring pledges and hence use a TTL of 1.</t>

<t>The use of "" for "rrm" in BRSKI is again for backward compatibility with
<xref target="BRSKI"/>. The absence of two announcements for cBRSKI is because there is no stateless
mode from Join Proxy to pledge or Registrar-Agent. Instead, the Join Proxy will have
have to decide whether to connect to the registrar via stateful or stateless mode,
but this decision is invisible on its GRASP announcements.</t>

<t>Noteworthy too is the use of two different ports for "rrm" versus "prm". As the Registrar
did announce support for both variations on the same TCP port, the Join Proxy could have
done the same, but by using different ports, the Join Proxy can choose independently
which Registrar to connect "rrm" versus "prm" sessions to. For example, another Registrar
could announce itself for only "prm" and might be preferred by the Join Proxy.</t>

<figure title="GRASP example for a BRSKI Registrar supporting RRM and PRM via separate processes" anchor="grasp-example-3"><artwork><![CDATA[
[M_FLOOD, 12340815, h'fe800000000000000000000000000001', 180000,
    [["AN_Join_Registrar", 4, 255, "",
     [O_IPv6_LOCATOR,
     h'fe800000000000000000000000000001', IPPROTO_TCP, 4443],
     ["AN_Join_Registrar", 4, 255, "",
     [O_IPv6_LOCATOR,
     h'fe800000000000000000000000000001', IPPROTO_UDP, 4684]]
]

[M_FLOOD, 42310815, h'fe800000000000000000000000000001', 180000,
    [["AN_Join_Registrar", 4, 255, "prm",
     [O_IPv6_LOCATOR,
     h'fe800000000000000000000000000001', IPPROTO_TCP, 44000]]
]
]]></artwork></figure>

<t>In <xref target="grasp-example-3"/>, A separate application process supports "prm" and hence
uses a separate socket with port number 44000 from "rrm", with port 4443.
Assuming there is no shared GRASP implementation across the two separate process,
such as a separate GRASP process, the announcements from both processes can
not be merged into a single GRASP packet. Instead, each one will send its own
GRASP announcements separately. This exampe primarily serves as a reminder, that
it is necessary for receivers to support receiving multiple announcements from the
same sender in GRASP not only within a single packet, but also when they arrive
via separate packes. To support implementation cases just as this one.</t>

<t>For a more extensive, DNS-SD compatible encoding of the objective-value that also
support Service Instance Names, see <xref target="I-D.eckert-anima-grasp-dnssd"/>.</t>

</section>
</section>
<section anchor="core-lf"><name>CORE-LF</name>

<section anchor="overview-1"><name>Overview</name>

<t>"Web Linking", <xref target="RFC5988"/> defines a format, originally for use with
HTTP headers, to link an HTTP document against other URIs. Web linking is not a standalone
method for discovery of services for use with HTTP.</t>

<t>Based on Web Linking, "Constrained RESTful Environments (CoRE) Link Format", <xref target="CORE-LF"/> introduces a
stand alone method to discover resources, such as service instances.
CORE-LF was introduced primarily for use with <xref target="COAP"/> but it can equally be used for discovery of
service instances that use HTTP or any other suitable (web transfer) protocols.
This makes CORE-LF an alternative to DNS-SD and GRASP for any of the BRSKI variations.</t>

<t>In CORE-LF, an initiator may use (link-local) IPv6 multicast UDP packet to the COAP port (5683)
to discover a possible responder for a requested resource. The responder will reply with unicast UDP.
If the IPv6 address of a responder has been configured or is otherwise known to the initiator, it
may instead of multicast equally query the parameters of the desired resource via unicast to the default COAP UDP or
TCP port (5683).</t>

<t><xref target="RFC9176"/> defines a "Resource Directory" mechanism for CORE-LF which is abbreviated CORE-RD. Initiators
can learn the IPv6 address protocol (TCP or UDP) and port number of a CORE-RD server by some other
mechanism (such as DNS-SD) and then use a unicast UDP or TCP COAP connection to the CORE-RD server
to discover CORE-LF resources available on other systems. Resource providers can likewise register
their resources with the resource directory server using CORE-RD registration procedures.</t>

<t>In summaery, CORE-LF including CORE-RD is a mechanism for registration and discovery of resources and
hence services which may be preferred in deployments over other options and can equally be applicable
to register/discover any variation of BRSKI for any type of BRSKI service.</t>

</section>
<section anchor="background"><name>Background</name>

<t><xref target="cBRSKI"/> specifies the use of CORE-LF as the reference method
for pledges to discover registrars - in the absence of any proxies, to allow deployments
of scenarios where no proxies are needed - and hence also where <xref target="cBRSKI"/>
is not needed. Because BRSKI is designed so that pledges can be agnostic of whether they connect
to a registrar directly or via a Join Proxy, the resource/service that the pledge needs to discover
is nevertheless called "(BRSKI) Join Proxy (for pleges)", and encoded in CORE-LF as the value
"brski.jp" for the resource type attribute ("rt=resource-type") according to <xref target="CORE-LF"/>.</t>

<t>The following picture, <xref target="corelf-example-1"/> shows the encoding and an example of this discovery.
"ff02::fd" is the link-local scope address for "All Coap Nodes" in IPv6, as introduced in <xref target="RFC7390"/>,
which also defines IPv6 and site-scoped address options.</t>

<figure title="CORE-LF discovery of registrar/proxy by pledges" anchor="corelf-example-1"><artwork><![CDATA[
Template:

REQ: GET coap://[All_Coap_Nodes_IP_multicast_addr]/.well-known/core?rt=brski.jp

RES: 2.05 Content
   <coaps://[Responder_IP_unicast_address]:join-port>; rt="brski.jp"

Example:

REQ: GET coap://[ff02::fd]/.well-known/core?rt=brski.jp

RES: 2.05 Content
   <coaps://[fe80::c78:e3c4:58a0:a4ad]:8485>;rt=brski.jp
]]></artwork></figure>

<t><xref target="cPROXY"/> introduces the operations of a CoAP based Join Proxy
both as a connection based Join Proxy as in <xref target="BRSKI"/> (only using UDP connections for COAPs instead
of TCP for TLS as in <xref target="BRSKI"/>), but also as a new, stateless Join Proxy - to eliminate the
need for potentially highly constrained Join Proxy nodes to keep connection state and avoid
the complexity of protecting that state against attacks. The new resource type "brski.rjp" is
defined to support stateless Join Proxies to discover registrars and their UDP port number
that support the stateless, so-called JPY protocol.</t>

<t>The following picture, <xref target="corelf-example-2"/> shows the encoding and an example of this discovery.
<xref target="cPROXY"/> introduces the new scheme "coaps+jpy" for the packet
header used by the stateless JPY" protocol. The request in the template is assumed to be
based on unicast, relying on another method to discover the IP address of the registrar first.
It could equally use COAP site-scoped IP multicast, but in general, the assumeption is that
registrar will not necessarily be link-local connected to proxies (this may be different in
specific deployments). Even though the registrar IP address is hence known, the reply still
needs to include this address again because in the <xref target="CORE-LF"/> link format, and <xref target="RFC3986"/>, Section 3.2, the
authority attribute can not include a port number unless it also includes the IP address.</t>

<figure title="CORE-LF discovery of registrars that support stateless JPY protocll by proxies" anchor="corelf-example-2"><artwork><![CDATA[
Template:

REQ: GET /.well-known/core?rt=brski.jpy

RES: 2.05 Content
     <coaps+jpy://[Responder_IP_unicast_address]:join-port>;rt=brski.jpy

Example:

REQ: GET /.well-known/core?rt=brski.jpy

RES: 2.05 Content
     <coaps+jpy://[2001:db8:0:abcd::52]:7633>;rt=brski.jpy
]]></artwork></figure>

</section>
<section anchor="corelf-spec"><name>Specification</name>

<t>This section specifies the use of CORE-LF for BRSKI variations.
These specifications are backward compatible extensions to what was is specified in <xref target="cBRSKI"/>
and <xref target="cPROXY"/>, except for noted exceptions, where the requirements
are narrowed. This document does not specifiy how to discover
It uses terms from the ABNF in section 2 of <xref target="CORE-LF"/> and from <xref target="RFC3986"/> (URI) for explanations
and relies on the following template example, <xref target="corelf-template"/>.</t>

<figure title="Template for BRSKI discovery with variations" anchor="corelf-template"><artwork><![CDATA[
Template:

REQ: GET /.well-known/core?rt=brski.*

RES: 2.05 Content
     <scheme://[address]:port path-abempty>;\
       rt=brski-service(;var="brski-variation-string(s)");\
       pw="priority weight"
]]></artwork></figure>

<t>BRSKI responder sockets are indicated in CORE-LF as a URI-Reference. The URI-Reference <bcp14>SHOULD</bcp14> be
a URI with a scheme, the IP address of the responder socket and the port used by the responder.
It may optionally be followed by a non-empty path-abempty.</t>

<t>URL-references <bcp14>SHOULD</bcp14> not use a domain name instead of an address to allow responders to
select a BRSKI responder without requiring DNS support. Likewise, port and scheme
<bcp14>MUST</bcp14> be included so that the information can be passed on to consumers without having to
modify it. When omitting this information, the full information can only be known in the
context of the connections scheme and port through which it was retrieved.</t>

<t>Note that these URL-Reference requirements are stronger than those from <xref target="cBRSKI"/>
and <xref target="cPROXY"/> to make extensibility easier.</t>

<t>BRSKI responder sockets <bcp14>MUST</bcp14> include a resource type field indicating a resource type
value indicating a BRSKI service, indicated as "brski-service" in <xref target="corelf-template"/>.
This <bcp14>MUST</bcp14> be registered in the IANA "Resource Type Link Target Attribute Values" registry table,
and also referenced in the "BRSKI Variation Contexts" registry table <xref target="fig-contexts"/>. 
A brski-service is a string without "." (single component string).</t>

<t>Discovery of registrar sockets  by stateful proxies uses the resource type "brski.rs".
This can be used in conjunction with any scheme: https:// for BRSKI and coaps:// for cBRSKI.
Stateless registrar sockets use the resource type "brski.rjpy". This currently only support
the coaps+jpy:// scheme. By its nature, it can only be used with schemes that rely on UDP.
These resource type uses are no change over <xref target="cBRSKI"/>
and <xref target="cPROXY"/>. This document does not specifiy how to discover
BRSKI-PLEDGE via CORE-LF.</t>

<t>The variations supported by a BRSKI responder socket are indicated via the optional "var="
link-extension. The value is a quoted-string of one or more space contatenated
BRSKI variation strings. The absence of a "var=" link-extension indicates support for only
the default variation for the BRSKI context to which the BRSKI service belongs. This
can also be indicated as "var=".</t>

<t>The optional "pw" target attribute indicates priority and weight for the selection of 
the resource target with the semantic and format defined in <xref target="RFC2782"/> for priority
and weight in DNS SRV resource records. If the attribute pw is absent, then
it is assumed to mean pw="65535 0".</t>

<t>A non-empty path-abempty indicates a path prefix for the endpoints supporting the BRSKI
service and variation that is shorter than the default endpoint paths specified for
the service.</t>

</section>
<section anchor="examples-1"><name>Examples</name>

<figure title="CORE-LF examples for BRSKI variations" anchor="corelf-example-4"><artwork><![CDATA[
REQ: GET /.well-known/core?rt=brski.*

RES: 2.05 Content
Content-Format: 40
Payload:
 <https://[2001:DB8:0815::5e00:5314]:4555>;        # [1]
        rt=brski.rs;var="est-tls prm-jose cmp";
        pw="1 2",
 <https://[2001:DB8:0815::5e00:5314]:4555>;        # [2]
        rt=brski.jp;var="est-tls prm-jose cmp";
        pw="1 2",
 <coaps://[2001:DB8:0815::5e00:5314]:5684/b>;      # [3]
        rt=brski.rs;var=,
        pw="1 2",
 <coaps://[2001:DB8:0815::5e00:5314]:5684/b>;      # [4]
        rt=brski.jp;var=,
        pw="1 2",
 <coaps+jpy://[2001:DB8:0815::5e00:5314]:6534/b>;  # [5]
        rt=brski.rjpy;var=,
        pw="1 2"
]]></artwork></figure>

<t><xref target="corelf-example-4"/> shows example BRSKI variations in CORE-LF format. Note that
the example is pretty-printed through indentation and breaking long lines. This
additional white space is not compatible with actual CORE-LF output. Likewise, the text following
"#" are editorial comments.</t>

<t>Example [1] is the equivalent announcement for a BRSKI registrar service as
shown for DNS-SD in <xref target="dnssd-example-1"/> except for the absence of any
service instance. Note the use of "var=" to indicate the list of variation
strings supported and "pw=" to indicate priority and weight as in DNS-SD.</t>

<t>[3] is likewise the comparable example for the cBRSKI registar example with
DNS-SD. Note that here, a non-empty path-abempty "/b" is used to indicate a
shortened endpoint prefix path for the service. There is no equivalent
in DNS-SD defined. When discovering a service via DNS-SD, the service
will need to use the (longer) pre-defined endpoint prefixes, such as
"/brski" and "/est" instead of "/b".</t>

<t>Example [2] is the same socket as [1], but announced as a Join Proxy
socket for pledges. Likewise, [4] is the same socket as [2] announced
as a Join Proxy socket for pledges. Finally, [5] announces the registrars
socket in support of stateless Join Proxies using the JPY header encapsulation.</t>

</section>
<section anchor="brski-resources"><name>Resource Type Considerations</name>

<t>CORE-LF expresses information about resources of a target identified by
a resource type. This specification encodes BRSKI services in CORE-LF also as
a resource types, as specified in <xref target="corelf-spec"/>. For the purpose of CORE-LF,
a BRSKI service is just another resource, except that it characterizes the
overall functionality available across a connection to the target, composed
of a sequence of endpoint instantiations. In addition, this behavior is
further refined by the list of supported variations indicated.</t>

<t>Often, resources in CORE-LF do - instead of a service - describe details of
as little as a single endpoint, such as its URL prefix and format encoding.
The reason why this fine-grained specification is not a good replacement
for the concept of service and variation is that the avilability of a set
of endpoints with specific encodings does not imply whether the target does
support the desired specific sequencing of instantiating those endpoints,
including the use of any endpoint encoding option in any combination.</t>

<t>Making such arbitrary combinations a requirement can easily
lead to more generic, but also more costly implementations and testing
requirements without necessarily gaining deployment benefit.</t>

<t>BRSKI resource types which are not treated as services according to 
this specification can still be used if so desired to amend the
discovery of shortened endpoints, as shown in <xref target="corelf-shortenings"/>.</t>

<figure title="CORE-LF resource examples" anchor="corelf-shortenings"><artwork><![CDATA[
RES: 2.05 Content
Content-Format: 40
Payload:
 <https://[2001:DB8:0815::5e00:5314]:4555/b>;      # [1]
        rt=brski.rs;var="est-tls prm-jose cmp";
        pw="1 2",
 <https://[2001:DB8:0815::5e00:5314]:4555/b/rv>;   # [2]
        rt=brski.rs.requestvoucher,                           
 <https://[2001:DB8:0815::5e00:5314]:4555/b/vs>;   # [3]
        rt=brski.rs.voucher_status,                           
 </b/rv>;rt=brski.rs.rv,                           # [4]
 </b/vs>;rt=brski.rs.vs,                           # [5]
]]></artwork></figure>

<t>[1] shows how the prefix for all BRSKI endpoints over "https://"
can be shortened from "/.well-known/brski" to "/b". Nevertheless,
this would still make it necessary to use "/b/requestvoucher"
and "/b/voucher_status" as endpoints.</t>

<t>[2] and [3] show how to shorten those two endpoints to
"/b/rv" and "/b/rs" by creating resource types "brski.rs.rv"
and "brski.rs.vs". By using resource type prefix "brski.rs."
for both of them as well as path prefix "/b", it can be implied
that these endpoints are part of the service specified in [1],</t>

<t>These discovery options can be further compacted such as
shown in example [4] and [5] when assuming that the
abbreviations "rv" and "vs" are also known even by BRSKI
implementations from <xref target="cBRSKI"/>. Likewise,
the full socket details can be avoided when one can infer it
from context.</t>

<t>While these shortenings can be highly useful in often called
resources, each endpoint in BRSKI is typically only  instantiated
once by a pledge, so the overall savings in communication data
becauseof these shortenings is likely negligible, and it is
better to define short endpoint paths into the variation
specification if they are likely needed, such as done in
<xref target="cBRSKI"/>, such that it is not
necessary in cBRSKI to add such shortenings in discovery.
For these reasons, this document does not specify if or how
to use such resource targets in cunjunction with BRSKI discovery
but only discusses possibilities and limitations here.</t>

<t>Considerations for such non-service resource type use in BRSKI
nevertheless introduces one requirement to avoid conflicts:
The names of BRSKI services
<bcp14>MUST</bcp14> not duplicate the endpoint names of any resources specified
for BRSKI protocols. This means that "rv" or "vs" can not be
used to create BRSKI service name resource types "brski.rv" or
"brski.rs", and likewise, Additional BRSKI endpoints can not
be called "rs", "jp", "jpy" or any other string registered in the
BRSKI discover registry tables.</t>

</section>
</section>
</section>
</section>
<section anchor="IANA"><name>IANA considerations</name>

<section anchor="core-parameters"><name>Core Parameters</name>

<section anchor="resource-type-link-target-attribute-values"><name>Resource Type Link Target Attribute Values</name>

<t>IANA is asked to reserve all resource type values starting with "brski."
in the "Resource Type (rt=) Link Target Attribute Values" table. Resources
with this prefix are meant to be required for discovery
of BRSKI services and resources (see <xref target="brski-resources"/>) and hence <bcp14>SHOULD</bcp14>
be listed in the BRSKI Variation Contexts registry table for use with CORE-LF,
if they indicate a service, or be specified in a BRSKI specification if
they are resources but not services.</t>

</section>
<section anchor="target-attributes"><name>Target Attributes</name>

<texttable title="Target Variation and Priority/Weight Attributes" anchor="fig-attrs">
      <ttcol align='left'>Attribute Name</ttcol>
      <ttcol align='left'>Brief Description</ttcol>
      <ttcol align='left'>Change Controller</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>var</c>
      <c>List of supported variations of target</c>
      <c>IETF</c>
      <c>[ThisRFC]</c>
      <c>pw</c>
      <c>DNS SRV compatible priority and weight of resource target</c>
      <c>IETF</c>
      <c>[ThisRFC]</c>
</texttable>

<t>IANA is asked to add an entries for "var" and "pw" according to above <xref target="fig-attrs"/> to
the "Target Attributes" table.</t>

<t>The "var" target attribute is meant to be used for BRSKI targets as specified in
this document. It is also meant to be useable for other targets if so desired - to
indicate variations of the resource type of the target. For targets with a non-BRSKI
resource target (not using "rt=brski.*"), the format of the value may be different
than specified for BRSKI.</t>

<t>The "pw" target attribute indicates priority and weight for the selection of
the resource target with the semantic and format defined in <xref target="RFC2782"/> for priority
and weight in DNS SRV resource records. If the attribute pw is absent, then
it is assumed to mean pw="65535 0".</t>

</section>
</section>
<section anchor="registry"><name>BRSKI Discovery Parameters Registry (section)</name>

<t>This document requests a new section named "BRSKI Variations Discovery Parameters"
in the "Bootstrapping Remote Secure Key Infrastructures (BRSKI) Parameters"
registry (https://www.iana.org/assignments/brski-parameters/brski-parameters.xhtml).
Its initial content is as follows.</t>

<t>[ RFC editor. Please remove the following sentence.
Note to IANA: This section contains three tables according to the specifications of this document.
Each of these tables should include the table title so that they can be more easily
distinguished.  If it is not possible to introduce more than one table per section, then we will modify the request
accordingly for three sections, but given how the three tables are tightly linked, that would be unfortunate. ]</t>

<t>Registration Procedure(s):
  Standards action or expert review based on registration.  See ThisRFC.</t>

<t>Experts:
  TBD.</t>

<t>Reference:
  ThisRFC.</t>

<t>Notes:</t>

<dl>
  <dt>Dflt flag:</dt>
  <dd>
    <t>Indicates a Variation Type Choice that is assumed to be used if the service discover/selection mechanism does not indicate any variation.</t>
  </dd>
  <dt>Rsvd Flag:</dt>
  <dd>
    <t>Indicates a Variation Type Choice that is reserved for use with the mechanism described in the Note(s) column, but for which no specification yet exists.</t>
  </dd>
  <dt>Spec / Applicability:</dt>
  <dd>
    <t>A "-" indicates that the variation is considered to be feasible through existing specifications, but not explicitly mentioned in them.
An "NA" indicates that the combination is assumed to be not working with the currently available specifications.</t>
  </dd>
</dl>

<section anchor="brski-variation-context-registry-table"><name>BRSKI Variation Context Registry Table</name>

<t>[RFC-Editor / IANA: The following IANA tables should also have hotlinks for the referenced RFC/drafts. Unfortunately, several of the referenced documents are already referenced in this document with protocol names such as cBRSKI instead of draft-if/RFC-number, which is to make it easier to read the draft. However, this is not appropriate for pictures or IANA tables. But as you can see from explanations in Changelog for rev 06, i can not figure out how to have both type of references. Hence i have removed the references from draft/RFC in this section. Please re-establish them in the RFC if possible.]</t>

<texttable title="BRSKI Variation Contexts" anchor="fig-contexts">
      <ttcol align='left'>Context</ttcol>
      <ttcol align='left'>Applicable Variation Types</ttcol>
      <ttcol align='left'>Discovery Mechanism</ttcol>
      <ttcol align='left'>Service Name(s) / Transport</ttcol>
      <ttcol align='left'>Reference(s)</ttcol>
      <c>BRSKI</c>
      <c>mode<br />vformat<br />enroll</c>
      <c>GRASP</c>
      <c>"AN_join_registrar" /<br /> "AN_Proxy"<br />with IPPROTO_TCP</c>
      <c>RFC8995</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>DNS-SD</c>
      <c>"brski-registrar" /<br /> "brski-proxy"<br /> with TCP</c>
      <c>RFC8995</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>CORE-LF</c>
      <c>"rt=brski.jp" /<br /> "rt=brski.rs" with https</c>
      <c>THIS-RFC</c>
      <c>cBRSKI</c>
      <c>mode<br />vformat<br />enroll</c>
      <c>CORE-LF</c>
      <c>rt=brski.jp with coaps</c>
      <c>I-D.ietf-anima-constrained-voucher</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>rt=brski.rs /<br /> rt=brski.rjpy with coaps</c>
      <c>I-D.ietf-anima-constrained-join-proxy</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>DNS-SD</c>
      <c>"brski-proxy"<br /> /<br /> "brski-registrar" /<br /> "brski-registrar-rpy" with UDP</c>
      <c>THIS-RFC</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>GRASP</c>
      <c>"AN_join_registrar" /<br /> "AN_join_registrar_rjp" /<br /> "AN_Proxy"<br /> with IPPROTO_UDP</c>
      <c>[THIS-RFC]</c>
      <c>BRSKI-PLEDGE</c>
      <c>mode<br />vformat<br />enroll</c>
      <c>DNS-SD</c>
      <c>"brski-pledge" with TCP</c>
      <c>[THIS-RFC]</c>
</texttable>

</section>
<section anchor="brski-variation-type-and-choices-registry-table"><name>BRSKI Variation Type and Choices Registry Table</name>

<texttable title="BRSKI Variation Type and Choices" anchor="fig-choices">
      <ttcol align='left'>Context</ttcol>
      <ttcol align='left'>Variation Type</ttcol>
      <ttcol align='left'>Variation Type Choice</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <ttcol align='left'>Flags</ttcol>
      <ttcol align='left'>Note(s)</ttcol>
      <c>BRSKI, cBRSKI</c>
      <c>mode</c>
      <c>rrm</c>
      <c>RFC8995<br />ThisRFC</c>
      <c>Dflt</c>
      <c>Registrar Responder Mode <br /> the mode specified in RFC8995</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>prm</c>
      <c>ThisRFC  <br /></c>
      <c>&#160;</c>
      <c>Pledge Responder Mode    <br /> I-D.ietf-anima-brski-prm</c>
      <c>BRSKI</c>
      <c>vformat</c>
      <c>cmsj</c>
      <c>RFC8368<br />ThisRFC</c>
      <c>Dflt</c>
      <c>CMS-signed JSON Voucher  <br /></c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>cose</c>
      <c>ThisRFC<br /></c>
      <c>&#160;</c>
      <c>CBOR with COSE signature<br /></c>
      <c>cBRSKI</c>
      <c>&#160;</c>
      <c>cose</c>
      <c>ThisRFC<br /></c>
      <c>Dflt</c>
      <c>CBOR with COSE signature <br /> I-D.ietf-anima-constrained-voucher</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>cmsj</c>
      <c>RFC8368<br />ThisRFC</c>
      <c>&#160;</c>
      <c>CMS-signed JSON Voucher  <br /></c>
      <c>BRSKI, cBRSKI</c>
      <c>&#160;</c>
      <c>jose</c>
      <c>ThisRFC<br /></c>
      <c>Dflt*</c>
      <c>JOSE-signed JSON, Default when prm is used<br /> I-D.ietf-anima-jws-voucher, I-D.ietf-anima-brski-prm</c>
      <c>BRSKI-PLEDGE</c>
      <c>mode</c>
      <c>prm</c>
      <c>ThisRFC</c>
      <c>Dflt</c>
      <c>Pledge responder Mode<br />I-D.ietf-anima-brski-prm</c>
      <c>&#160;</c>
      <c>vformat</c>
      <c>jose</c>
      <c>ThisRFC</c>
      <c>Dflt</c>
      <c>JOSE-signed JSON, Default when prm is used<br /> I-D.ietf-anima-jws-voucher, I-D.ietf-anima-brski-prm</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>cmsj</c>
      <c>ThisRFC</c>
      <c>Rsvd</c>
      <c>CMS-signed JSON Voucher, not specified.</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>cose</c>
      <c>ThisRFC</c>
      <c>Rsvd</c>
      <c>CBOR with COSE signature, not specified.</c>
      <c>BRSKI, BRSKI-PLEDGE</c>
      <c>enroll</c>
      <c>est</c>
      <c>RFC8995<br />RFC7030</c>
      <c>Dflt</c>
      <c>Enroll via EST           <br /> as specified in RFC8995, extension for BRSKI-PRM when used in context BRSKI-PLEDGE</c>
      <c>cBRSKI</c>
      <c>&#160;</c>
      <c>est</c>
      <c>ThisRFC</c>
      <c>Dflt</c>
      <c>Enroll via EST over COAP, RFC9148</c>
      <c>BRSKI, BRSKI-PLEDGE</c>
      <c>&#160;</c>
      <c>cmp</c>
      <c>ThisRFC</c>
      <c>&#160;</c>
      <c>Lightweight CMP Profile  <br /> RFC9733, RFC9483.</c>
      <c>BRSKI</c>
      <c>&#160;</c>
      <c>scep</c>
      <c>ThisRFC</c>
      <c>Rsvd</c>
      <c>RFC8894</c>
</texttable>

</section>
<section anchor="brski-variations-and-variation-strings"><name>BRSKI Variations and Variation Strings</name>

<texttable title="BRSKI Variation and Variation Strings" anchor="fig-variations">
      <ttcol align='left'>Context</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <ttcol align='left'>Variation String</ttcol>
      <ttcol align='left'>Variation</ttcol>
      <ttcol align='left'>Explanations / Notes</ttcol>
      <c>BRSKI</c>
      <c>RFC8995</c>
      <c>"" / "EST-TLS"</c>
      <c>rrm cmsj est</c>
      <c>Note 1</c>
      <c>&#160;</c>
      <c>RFC9733</c>
      <c>cmp</c>
      <c>rrm cmsj cmp</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>RFC9733</c>
      <c>prm-jose</c>
      <c>prm jose est</c>
      <c>RFC9733 also includes required extensions to EST</c>
      <c>BRSKI-PLEDGE</c>
      <c>I-D.ietf-anima-brski-prm</c>
      <c>"" / "prm-jose"</c>
      <c>prm jose est</c>
      <c>&#160;</c>
      <c>cBRSKI</c>
      <c>I-D.ietf-anima-constrained-voucher</c>
      <c>"" / "rrm-cose"</c>
      <c>rrm cose est</c>
      <c>&#160;</c>
</texttable>

<dl>
  <dt>Note 1:</dt>
  <dd>
    <t>The Variation String "EST-TLS" is equivalent to the Variation String "" and is required and only permitted for the AN_join_registrar objective value in GRASP for backward compatibility with RFC8995, where it is used for this variation. Note that AN_proxy uses "".</t>
  </dd>
</dl>

</section>
</section>
<section anchor="service-names-registry"><name>Service Names Registry</name>

<t>IANA is asked to modify and amend the "Service Name and Transport Protocol Port Number Registry" registry (https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt) as follows:</t>

<t>brski-proxy and brski-registrar are to be added as Service Names for the "udp" protocol using ThisRFC as the reference.</t>

<t>The registrations for brski-proxy and brski-registrar for the "tcp" protocol are to be updated to also include ThisRFC as their reference.</t>

<t>The Defined TXT keys column for brski-proxy and brski-registrar for both "tcp" and "udp" protocols are to state the following text:</t>

<t>See ThisRFC and the "BRSKI Variation Type Choices" table in the "Bootstrapping Remote Secure Key Infrastructures (BRSKI) Parameters" registry.</t>

<t>TBD: This request likely does not include all the necessary formatting.</t>

</section>
<section anchor="brski-well-known-uris-fixes-opportunistic"><name>BRSKI Well-Known URIs fixes (opportunistic)</name>

<t>The following change requests to "https://www.iana.org/assignments/brski-parameters/brski-parameters.xhtml#brski-well-known-uris" are cosmetic in nature and are included in this document solely because support for Endpoint URIs is implied by the mechanisms specified in this document and the existing registry has these cosmetic issues.</t>

<t><list style="numbers">
  <t>IANA is asked to change the name of the first column of the table from "URI" to "URI Suffix". This is in alignment with other table columns with the same syntax/semantic, such as "https://www.iana.org/assignments/well-known-uris/well-known-uris.xhtml".</t>
  <t>IANA is asked to change the Reference from "RFC8995"  to "RFC8995, Section 8.3.1".</t>
  <t>IANA is asked to include the following "Note" text: The following table contains the assigned BRSKI protocol Endpoint URI suffixes under "/.well-known/brski"." - This note is added to introduce the term "Endpoint" into the registry table as that is the term commonly used (instead of URI) in several of the memos for which this discovery document was written. It is meant to help readers map the registry to the terminology used in those documents.</t>
</list></t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>In <xref target="BRSKI-PRM"/>, pledges are easier subject to DoS attacks than in <xref target="BRSKI"/>, because attackers
can be initiators and delay or prohibit enrollment of a pledge by opening so many connections to
the pledge that a valid Registrar-Agents connection to the pledge may not be possible. Discovery
of the pledge via DNS-SD increases the ability of attackers to discover pledges against which such
DoS attacks can be attempted.</t>

<t>Especially when supporting DNS-SD browsing across unicast DNS,
Pledges <bcp14>MUST</bcp14> implement DoS prevention measures, such as limiting the number and rate of accepted TCP
connections on a per-initiator basis. If feasible for the implementation, simultaneous connections
<bcp14>SHOULD</bcp14> be possible, so that an ongoing attacker connection will not delay a valid Registrar-Agent
connection. When accepting connections, a strategy such as LRU <bcp14>MAY</bcp14> be used to ensure that an attacker
will not be able to monopolize connections.</t>

<t>Browsing via DNS-SD, especially via unicast DNS which makes information available network-wide does
also introduce a perpass attack, gathering intelligence against what type and serial number of
devices are installed in the network. Whether or not this is seen as a relevant risk is highly
installation dependent. Networks <bcp14>SHOULD</bcp14> implement filtering measures at mDNS and/or DNS RR/services
level to prohibit such data collection if there is a risk, and this is seen as an undesirable attack
vector.</t>

<t>Service instance names as defined in <xref target="brski-pledge"/> are used to discover pledges
by their manufacturer assiged serial numbers. Today, DNS-SD does not provide security
against impersonation of such service instance names. Instead, impersonation can and
will only be discovered after performing BRSKI connections to the pledge. It should
be noted, that the scheme used by <xref target="brski-pledge"/> could actually be used to protect
against impersonation when <xref target="DNSSD-SRP"/> with some security extension is used:
Pledges need to signal their IDevID for their SRP TLS connection, and the SRV server
needs to have the same manufacturer Service Instance Name schema and manufacturer
trust anchor information as BRSKI registrars and can then allow only the permissible
service instance name DNS-SD RRs for this pledge. In fact, the SRP server could
create the all necessary <xref target="brski-pledge"/> required DNS-SD RRs from the IDevID
information even if the pledge itself is not requesting them or is requesting other
DNS-SD RRs. Definition of these procedures is outside the scope of this specification
though.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>TBD.</t>

</section>
<section anchor="draft-considerations"><name>Draft considerations</name>

<section anchor="open-issues"><name>Open Issues</name>

<t>Questions to the DNS-SD community.</t>

<t>TBD</t>

</section>
<section anchor="change-log"><name>Change log</name>

<t>[RFC Editor: please remove this section.]</t>

<t>WG draft 06:</t>

<t>Review Steffen Fries:</t>

<t>Cleaned up terminology IP/IPv6 -&gt; IP/IPv4/IPv6.</t>

<t>CA -&gt; trust anchor</t>

<t>BRSKI proxy -&gt; Join Proxy for consistency with RFC8995.</t>

<t>Added mentioning of Registrar-Agent from BRSKI-PRM where appropriate</t>

<t>Rewrote 2.1.3 to make the functionalty of variation agnostistic proxying clearer (hopefully)</t>

<t>Rewrite 3.1.1 to clearer define role and services and distinguish them.</t>

<t>Changed "cms" to "cmsj"(as well as derived variation strings) so that it is clear that this variation type does not mean all possible encoding options for CMS but only JSON.</t>

<t>Added explanation about the fact that a variation may introduce changes to a variation type component that shares the same name (3.1.6)</t>

<t>Noted that discovery of pledges does not apply in 3.2 which talks about redundant service discovery/selection.</t>

<t>removed last paragraph from 3.3.2.2 - duplicate from earlier section.</t>

<t>Improved 3.4.3 by better structuring the example figure and rewriting the explanation text as a step-by-step explanation how a Registrar-Agent would perform the steps.</t>

<t>Fixed small bugs in GRASp example section 3.5.2.2 but ended up improving examples a lot and make them more useful (registrat AND proxy )</t>

<t>Still can not figure out how to nicely get hotlinks to the terminology section definitions. They just
show up in text format as "Section 1" or the like. Giving up on the idea. TBD: Maybe ask RFC editor/RSWG.
Likewise, i can not have references to BRSKI RFCs both with a logical name like BRSKI-PRM and in other
places references with the RFC number. I need to define both as references and then the same RFC will
have two entries. Stupid. Now i only have logical references, but in all places where i need to
actually reference the RFC by number, such as IANA registries or pictures, i do not use references
anymore.</t>

<t>WG draft 05:</t>

<t>Mayor update to specifiy resilience aspects in selection of responders.</t>

<t>Mayor update/simpliciation of CORE-LF section.</t>

<t>WG draft 02/03:</t>

<t>Fix up tables to be correctly rendered by html output.</t>

<t>WG draft 01:</t>

<t>Core-LF improvements  / interim work.</t>

<t>WG draft 00:</t>

<t>Added section for CORE-LF. Still missing to update existing text with the CORE-LF definitions.</t>

<t>Individual version 01:</t>

<t>Various enhancements</t>

<t>Individual version 00:</t>

<t>Initial version.</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2782">
  <front>
    <title>A DNS RR for specifying the location of services (DNS SRV)</title>
    <author fullname="A. Gulbrandsen" initials="A." surname="Gulbrandsen"/>
    <author fullname="P. Vixie" initials="P." surname="Vixie"/>
    <author fullname="L. Esibov" initials="L." surname="Esibov"/>
    <date month="February" year="2000"/>
    <abstract>
      <t>This document describes a DNS RR which specifies the location of the server(s) for a specific protocol and domain. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2782"/>
  <seriesInfo name="DOI" value="10.17487/RFC2782"/>
</reference>

<reference anchor="RFC3986">
  <front>
    <title>Uniform Resource Identifier (URI): Generic Syntax</title>
    <author fullname="T. Berners-Lee" initials="T." surname="Berners-Lee"/>
    <author fullname="R. Fielding" initials="R." surname="Fielding"/>
    <author fullname="L. Masinter" initials="L." surname="Masinter"/>
    <date month="January" year="2005"/>
    <abstract>
      <t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource. This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet. The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier. This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="66"/>
  <seriesInfo name="RFC" value="3986"/>
  <seriesInfo name="DOI" value="10.17487/RFC3986"/>
</reference>

<reference anchor="RFC5280">
  <front>
    <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
    <author fullname="D. Cooper" initials="D." surname="Cooper"/>
    <author fullname="S. Santesson" initials="S." surname="Santesson"/>
    <author fullname="S. Farrell" initials="S." surname="Farrell"/>
    <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <author fullname="W. Polk" initials="W." surname="Polk"/>
    <date month="May" year="2008"/>
    <abstract>
      <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5280"/>
  <seriesInfo name="DOI" value="10.17487/RFC5280"/>
</reference>

<reference anchor="CORE-LF">
  <front>
    <title>Constrained RESTful Environments (CoRE) Link Format</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <date month="August" year="2012"/>
    <abstract>
      <t>This specification defines Web Linking using a link format for use by constrained web servers to describe hosted resources, their attributes, and other relationships between links. Based on the HTTP Link Header field defined in RFC 5988, the Constrained RESTful Environments (CoRE) Link Format is carried as a payload and is assigned an Internet media type. "RESTful" refers to the Representational State Transfer (REST) architecture. A well-known URI is defined as a default entry point for requesting the links hosted by a server. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6690"/>
  <seriesInfo name="DOI" value="10.17487/RFC6690"/>
</reference>

<reference anchor="mDNS">
  <front>
    <title>Multicast DNS</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6762"/>
  <seriesInfo name="DOI" value="10.17487/RFC6762"/>
</reference>

<reference anchor="DNS-SD">
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <author fullname="M. Krochmal" initials="M." surname="Krochmal"/>
    <date month="February" year="2013"/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6763"/>
  <seriesInfo name="DOI" value="10.17487/RFC6763"/>
</reference>

<reference anchor="RFC7390">
  <front>
    <title>Group Communication for the Constrained Application Protocol (CoAP)</title>
    <author fullname="A. Rahman" initials="A." role="editor" surname="Rahman"/>
    <author fullname="E. Dijk" initials="E." role="editor" surname="Dijk"/>
    <date month="October" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for constrained devices and constrained networks. It is anticipated that constrained devices will often naturally operate in groups (e.g., in a building automation scenario, all lights in a given room may need to be switched on/off as a group). This specification defines how CoAP should be used in a group communication context. An approach for using CoAP on top of IP multicast is detailed based on existing CoAP functionality as well as new features introduced in this specification. Also, various use cases and corresponding protocol flows are provided to illustrate important concepts. Finally, guidance is provided for deployment in various network topologies.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7390"/>
  <seriesInfo name="DOI" value="10.17487/RFC7390"/>
</reference>

<reference anchor="GRASP">
  <front>
    <title>GeneRic Autonomic Signaling Protocol (GRASP)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="B. Carpenter" initials="B." role="editor" surname="Carpenter"/>
    <author fullname="B. Liu" initials="B." role="editor" surname="Liu"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies the GeneRic Autonomic Signaling Protocol (GRASP), which enables autonomic nodes and Autonomic Service Agents to dynamically discover peers, to synchronize state with each other, and to negotiate parameter settings with each other. GRASP depends on an external security environment that is described elsewhere. The technical objectives and parameters for specific application scenarios are to be described in separate documents. Appendices briefly discuss requirements for the protocol and existing protocols with comparable features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8990"/>
  <seriesInfo name="DOI" value="10.17487/RFC8990"/>
</reference>

<reference anchor="ACP">
  <front>
    <title>An Autonomic Control Plane (ACP)</title>
    <author fullname="T. Eckert" initials="T." role="editor" surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." role="editor" surname="Behringer"/>
    <author fullname="S. Bjarnason" initials="S." surname="Bjarnason"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>Autonomic functions need a control plane to communicate, which depends on some addressing and routing. This Autonomic Control Plane should ideally be self-managing and be as independent as possible of configuration. This document defines such a plane and calls it the "Autonomic Control Plane", with the primary use as a control plane for autonomic functions. It also serves as a "virtual out-of-band channel" for Operations, Administration, and Management (OAM) communications over a network that provides automatically configured, hop-by-hop authenticated and encrypted communications via automatically configured IPv6 even when the network is not configured or is misconfigured.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8994"/>
  <seriesInfo name="DOI" value="10.17487/RFC8994"/>
</reference>

<reference anchor="BRSKI">
  <front>
    <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
    <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="T. Eckert" initials="T." surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="May" year="2021"/>
    <abstract>
      <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8995"/>
  <seriesInfo name="DOI" value="10.17487/RFC8995"/>
</reference>

<reference anchor="BRSKI-AE">
  <front>
    <title>BRSKI with Alternative Enrollment (BRSKI-AE)</title>
    <author fullname="D. von Oheimb" initials="D." role="editor" surname="von Oheimb"/>
    <author fullname="S. Fries" initials="S." surname="Fries"/>
    <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
    <date month="March" year="2025"/>
    <abstract>
      <t>This document defines enhancements to the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol, known as BRSKI with Alternative Enrollment (BRSKI-AE). BRSKI-AE extends BRSKI to support certificate enrollment mechanisms instead of the originally specified use of Enrollment over Secure Transport (EST). It supports certificate enrollment protocols such as the Certificate Management Protocol (CMP) that use authenticated self-contained signed objects for certification messages, allowing for flexibility in network device onboarding scenarios. The enhancements address use cases where the existing enrollment mechanism may not be feasible or optimal, providing a framework for integrating suitable alternative enrollment protocols. This document also updates the BRSKI reference architecture to accommodate these alternative methods, ensuring secure and scalable deployment across a range of network environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9733"/>
  <seriesInfo name="DOI" value="10.17487/RFC9733"/>
</reference>


<reference anchor="BRSKI-PRM">
   <front>
      <title>BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>
      <author fullname="Steffen Fries" initials="S." surname="Fries">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Eliot Lear" initials="E." surname="Lear">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="3" month="June" year="2025"/>
      <abstract>
	 <t>   This document defines enhancements to Bootstrapping Remote Secure Key
   Infrastructure (BRSKI, RFC8995) as BRSKI with Pledge in Responder
   Mode (BRSKI-PRM).  BRSKI-PRM supports the secure bootstrapping of
   devices, referred to as pledges, into a domain where direct
   communication with the registrar is either limited or not possible at
   all.  To facilitate interaction between a pledge and a domain
   registrar the registrar-agent is introduced as new component.  The
   registrar-agent supports the reversal of the interaction model from a
   pledge-initiated mode, to a pledge-responding mode, where the pledge
   is in a server role.  To establish the trust relation between pledge
   and registrar, BRSKI-PRM relies on object security rather than
   transport security.  This approach is agnostic to enrollment
   protocols that connect a domain registrar to a key infrastructure
   (e.g., domain Certification Authority).

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-prm-23"/>
   
</reference>


<reference anchor="cBRSKI">
   <front>
      <title>Constrained Bootstrapping Remote Secure Key Infrastructure (cBRSKI)</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Peter Van der Stok" initials="P." surname="Van der Stok">
         <organization>vanderstok consultancy</organization>
      </author>
      <author fullname="Panos Kampanakis" initials="P." surname="Kampanakis">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="3" month="March" year="2025"/>
      <abstract>
	 <t>   This document defines the Constrained Bootstrapping Remote Secure Key
   Infrastructure (cBRSKI) protocol, which provides a solution for
   secure zero-touch onboarding of resource-constrained (IoT) devices
   into the network of a domain owner.  This protocol is designed for
   constrained networks, which may have limited data throughput or may
   experience frequent packet loss. cBRSKI is a variant of the BRSKI
   protocol, which uses an artifact signed by the device manufacturer
   called the &quot;voucher&quot; which enables a new device and the owner&#x27;s
   network to mutually authenticate.  While the BRSKI voucher data is
   encoded in JSON, cBRSKI uses a compact CBOR-encoded voucher.  The
   BRSKI voucher data definition is extended with new data types that
   allow for smaller voucher sizes.  The Enrollment over Secure
   Transport (EST) protocol, used in BRSKI, is replaced with EST-over-
   CoAPS; and HTTPS used in BRSKI is replaced with DTLS-secured CoAP
   (CoAPS).  This document Updates RFC 8995 and RFC 9148.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-constrained-voucher-27"/>
   
</reference>


<reference anchor="cPROXY">
   <front>
      <title>Join Proxy for Bootstrapping of Constrained Network Elements</title>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <author fullname="Peter Van der Stok" initials="P." surname="Van der Stok">
         <organization>vanderstok consultancy</organization>
      </author>
      <author fullname="Panos Kampanakis" initials="P." surname="Kampanakis">
         <organization>Cisco Systems</organization>
      </author>
      <author fullname="Esko Dijk" initials="E." surname="Dijk">
         <organization>IoTconsultancy.nl</organization>
      </author>
      <date day="23" month="January" year="2025"/>
      <abstract>
	 <t>   This document extends the constrained Bootstrapping Remote Secure Key
   Infrastructures (cBRSKI) onboarding protocol by adding a new network
   function, the constrained Join Proxy.  This function can be
   implemented by a constrained node [RFC7228].  The goal of the Join
   Proxy is to help new constrained nodes (&quot;Pledges&quot;) securely onboard
   into a new IP network using the cBRSKI protocol.  It acts as a
   circuit proxy for User Datagram Protocol (UDP) packets that carry the
   onboarding messages.  The solution is extendible to support other
   UDP-based onboarding protocols as well.  The Join Proxy functionality
   is designed for use in constrained networks [RFC7228], including IPv6
   over Low-Power Wireless Personal Area Networks (6LoWPAN) [RFC4944]
   based mesh networks in which the onboarding authority server
   (&quot;Registrar&quot;) may be multiple IP hops away from a Pledge.  Despite
   this distance, the Pledge only needs to use link-local UDP
   communication to complete cBRSKI onboarding.  Two modes of Join Proxy
   operation are defined, stateless and stateful, to allow implementers
   to make different trade-offs regarding resource usage, implementation
   complexity and security.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-constrained-join-proxy-16"/>
   
</reference>


<reference anchor="JWS-VOUCHER">
   <front>
      <title>JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
      <author fullname="Thomas Werner" initials="T." surname="Werner">
         <organization>Siemens AG</organization>
      </author>
      <author fullname="Michael Richardson" initials="M." surname="Richardson">
         <organization>Sandelman Software Works</organization>
      </author>
      <date day="15" month="January" year="2025"/>
      <abstract>
	 <t>   This document introduces a variant of the RFC8366 voucher artifact in
   which CMS is replaced by the JSON Object Signing and Encryption
   (JOSE) mechanism described in RFC7515.  This supports deployments in
   which JOSE is preferred over CMS.  In addition to specifying the
   format, the &quot;application/voucher-jws+json&quot; media type is registered
   and examples are provided.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-16"/>
   
</reference>

<reference anchor="EST">
  <front>
    <title>Enrollment over Secure Transport</title>
    <author fullname="M. Pritikin" initials="M." role="editor" surname="Pritikin"/>
    <author fullname="P. Yee" initials="P." role="editor" surname="Yee"/>
    <author fullname="D. Harkins" initials="D." role="editor" surname="Harkins"/>
    <date month="October" year="2013"/>
    <abstract>
      <t>This document profiles certificate enrollment for clients using Certificate Management over CMS (CMC) messages over a secure transport. This profile, called Enrollment over Secure Transport (EST), describes a simple, yet functional, certificate management protocol targeting Public Key Infrastructure (PKI) clients that need to acquire client certificates and associated Certification Authority (CA) certificates. It also supports client-generated public/private key pairs as well as key pairs generated by the CA.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7030"/>
  <seriesInfo name="DOI" value="10.17487/RFC7030"/>
</reference>

<reference anchor="RFC8368">
  <front>
    <title>Using an Autonomic Control Plane for Stable Connectivity of Network Operations, Administration, and Maintenance (OAM)</title>
    <author fullname="T. Eckert" initials="T." role="editor" surname="Eckert"/>
    <author fullname="M. Behringer" initials="M." surname="Behringer"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>Operations, Administration, and Maintenance (OAM), as per BCP 161, for data networks is often subject to the problem of circular dependencies when relying on connectivity provided by the network to be managed for the OAM purposes.</t>
      <t>Provisioning while bringing up devices and networks tends to be more difficult to automate than service provisioning later on. Changes in core network functions impacting reachability cannot be automated because of ongoing connectivity requirements for the OAM equipment itself, and widely used OAM protocols are not secure enough to be carried across the network without security concerns.</t>
      <t>This document describes how to integrate OAM processes with an autonomic control plane in order to provide stable and secure connectivity for those OAM processes. This connectivity is not subject to the aforementioned circular dependencies.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8368"/>
  <seriesInfo name="DOI" value="10.17487/RFC8368"/>
</reference>

<reference anchor="RFC9483">
  <front>
    <title>Lightweight Certificate Management Protocol (CMP) Profile</title>
    <author fullname="H. Brockhaus" initials="H." surname="Brockhaus"/>
    <author fullname="D. von Oheimb" initials="D." surname="von Oheimb"/>
    <author fullname="S. Fries" initials="S." surname="Fries"/>
    <date month="November" year="2023"/>
    <abstract>
      <t>This document aims at simple, interoperable, and automated PKI management operations covering typical use cases of industrial and Internet of Things (IoT) scenarios. This is achieved by profiling the Certificate Management Protocol (CMP), the related Certificate Request Message Format (CRMF), and transfer based on HTTP or Constrained Application Protocol (CoAP) in a succinct but sufficiently detailed and self-contained way. To make secure certificate management for simple scenarios and constrained devices as lightweight as possible, only the most crucial types of operations and options are specified as mandatory. More specialized or complex use cases are supported with optional features.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9483"/>
  <seriesInfo name="DOI" value="10.17487/RFC9483"/>
</reference>

<reference anchor="DNSSD-SRP">
  <front>
    <title>Service Registration Protocol for DNS-Based Service Discovery</title>
    <author fullname="T. Lemon" initials="T." surname="Lemon"/>
    <author fullname="S. Cheshire" initials="S." surname="Cheshire"/>
    <date month="June" year="2025"/>
    <abstract>
      <t>The Service Registration Protocol (SRP) for DNS-based Service Discovery (DNS-SD) uses the standard DNS Update mechanism to enable DNS-SD using only unicast packets. This makes it possible to deploy DNS-SD without multicast, which greatly improves scalability and improves performance on networks where multicast service is not an optimal choice, particularly IEEE 802.11 (Wi-Fi) and IEEE 802.15.4 networks. DNS-SD Service registration uses public keys and SIG(0) to allow services to defend their registrations.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9665"/>
  <seriesInfo name="DOI" value="10.17487/RFC9665"/>
</reference>

<reference anchor="RFC9148">
  <front>
    <title>EST-coaps: Enrollment over Secure Transport with the Secure Constrained Application Protocol</title>
    <author fullname="P. van der Stok" initials="P." surname="van der Stok"/>
    <author fullname="P. Kampanakis" initials="P." surname="Kampanakis"/>
    <author fullname="M. Richardson" initials="M." surname="Richardson"/>
    <author fullname="S. Raza" initials="S." surname="Raza"/>
    <date month="April" year="2022"/>
    <abstract>
      <t>Enrollment over Secure Transport (EST) is used as a certificate provisioning protocol over HTTPS. Low-resource devices often use the lightweight Constrained Application Protocol (CoAP) for message exchanges. This document defines how to transport EST payloads over secure CoAP (EST-coaps), which allows constrained devices to use existing EST functionality for provisioning certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9148"/>
  <seriesInfo name="DOI" value="10.17487/RFC9148"/>
</reference>

<reference anchor="RFC9176">
  <front>
    <title>Constrained RESTful Environments (CoRE) Resource Directory</title>
    <author fullname="C. AmsÃ¼ss" initials="C." role="editor" surname="AmsÃ¼ss"/>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="M. Koster" initials="M." surname="Koster"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="P. van der Stok" initials="P." surname="van der Stok"/>
    <date month="April" year="2022"/>
    <abstract>
      <t>In many Internet of Things (IoT) applications, direct discovery of resources is not practical due to sleeping nodes or networks where multicast traffic is inefficient. These problems can be solved by employing an entity called a Resource Directory (RD), which contains information about resources held on other servers, allowing lookups to be performed for those resources. The input to an RD is composed of links, and the output is composed of links constructed from the information stored in the RD. This document specifies the web interfaces that an RD supports for web servers to discover the RD and to register, maintain, look up, and remove information on resources. Furthermore, new target attributes useful in conjunction with an RD are defined.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9176"/>
  <seriesInfo name="DOI" value="10.17487/RFC9176"/>
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">




<reference anchor="I-D.ietf-bess-evpn-fast-df-recovery">
   <front>
      <title>Fast Recovery for EVPN Designated Forwarder Election</title>
      <author fullname="Patrice Brissette" initials="P." surname="Brissette">
         <organization>Cisco</organization>
      </author>
      <author fullname="Ali Sajassi" initials="A." surname="Sajassi">
         <organization>Cisco</organization>
      </author>
      <author fullname="Luc AndrÃ© Burdet" initials="L. A." surname="Burdet">
         <organization>Cisco</organization>
      </author>
      <author fullname="John Drake" initials="J." surname="Drake">
         <organization>Independent</organization>
      </author>
      <author fullname="Jorge Rabadan" initials="J." surname="Rabadan">
         <organization>Nokia</organization>
      </author>
      <date day="20" month="November" year="2024"/>
      <abstract>
	 <t>   The Ethernet Virtual Private Network (EVPN) solution in RFC 7432
   provides Designated Forwarder (DF) election procedures for multihomed
   Ethernet Segments.  These procedures have been enhanced further by
   applying the Highest Random Weight (HRW) algorithm for Designated
   Forwarder election to avoid unnecessary DF status changes upon a
   failure.  This document improves these procedures by providing a fast
   Designated Forwarder election upon recovery of the failed link or
   node associated with the multihomed Ethernet Segment.  This document
   updates RFC 8584 by optionally introducing delays between some of the
   events therein.

   The solution is independent of the number of EVPN Instances (EVIs)
   associated with that Ethernet Segment and it is performed via a
   simple signaling in BGP between the recovered node and each of the
   other nodes in the multihoming group.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-bess-evpn-fast-df-recovery-12"/>
   
</reference>

<reference anchor="RFC5988">
  <front>
    <title>Web Linking</title>
    <author fullname="M. Nottingham" initials="M." surname="Nottingham"/>
    <date month="October" year="2010"/>
    <abstract>
      <t>This document specifies relation types for Web links, and defines a registry for them. It also defines the use of such links in HTTP headers with the Link header field. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5988"/>
  <seriesInfo name="DOI" value="10.17487/RFC5988"/>
</reference>

<reference anchor="COAP">
  <front>
    <title>The Constrained Application Protocol (CoAP)</title>
    <author fullname="Z. Shelby" initials="Z." surname="Shelby"/>
    <author fullname="K. Hartke" initials="K." surname="Hartke"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation.</t>
      <t>CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7252"/>
  <seriesInfo name="DOI" value="10.17487/RFC7252"/>
</reference>

<reference anchor="RFC8894">
  <front>
    <title>Simple Certificate Enrolment Protocol</title>
    <author fullname="P. Gutmann" initials="P." surname="Gutmann"/>
    <date month="September" year="2020"/>
    <abstract>
      <t>This document specifies the Simple Certificate Enrolment Protocol (SCEP), a PKI protocol that leverages existing technology by using Cryptographic Message Syntax (CMS, formerly known as PKCS #7) and PKCS #10 over HTTP. SCEP is the evolution of the enrolment protocol sponsored by Cisco Systems, which enjoys wide support in both client and server implementations, as well as being relied upon by numerous other industry standards that work with certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8894"/>
  <seriesInfo name="DOI" value="10.17487/RFC8894"/>
</reference>


<reference anchor="I-D.eckert-anima-grasp-dnssd">
   <front>
      <title>DNS-SD Compatible Service Discovery in GeneRic Autonomic Signaling Protocol (GRASP)</title>
      <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
         <organization>Futurewei Technologies USA
      Inc.</organization>
      </author>
      <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
         <organization>Orange</organization>
      </author>
      <author fullname="Christian Jacquenet" initials="C." surname="Jacquenet">
         <organization>Orange</organization>
      </author>
      <author fullname="Michael H. Behringer" initials="M. H." surname="Behringer">
         </author>
      <date day="7" month="July" year="2024"/>
      <abstract>
	 <t>   DNS Service Discovery (DNS-SD) defines a framework for applications
   to announce and discover services.  This includes service names,
   service instance names, common parameters for selecting a service
   instance (weight or priority) as well as other service-specific
   parameters.  For the specific case of autonomic networks, GeneRic
   Autonomic Signaling Protocol (GRASP) intends to be used for service
   discovery in addition to the setup of basic connectivity.
   Reinventing advanced service discovery for GRASP with a similar set
   of features as DNS-SD would result in duplicated work.  To avoid
   that, this document defines how to use GRASP to announce and discover
   services relying upon DNS-SD features while maintaining the intended
   simplicity of GRASP.  To that aim, the document defines name
   discovery and schemes for reusable elements in GRASP objectives.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-eckert-anima-grasp-dnssd-07"/>
   
</reference>


<reference anchor="HRW98" target="https://www.microsoft.com/en-us/research/wp-content/uploads/2017/02/HRW98.pdf">
  <front>
    <title>Using Name-Based Mappings to Increase Hit Rates</title>
    <author initials="D. D." surname="Thaler" fullname="Dave D. Thaler">
      <organization></organization>
    </author>
    <author initials="C. V." surname="Ravishankar" fullname="Chinya V. Ravishankar">
      <organization></organization>
    </author>
    <date year="1998"/>
  </front>
</reference>


    </references>


<?line 2099?>

<section anchor="future"><name>Possible future variations</name>

<t>The following table <xref target="fig-future-variations"/> shows possible future entries for "Variation String" if
there is an interest for such a variation. Thesew would be subject to expert review and could
hence require appropriate additional specification so that interoperability based on that variation string
can be guaranteed.</t>

<texttable anchor="fig-future-variations">
      <ttcol align='left'>Context</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <ttcol align='left'>Variation String</ttcol>
      <ttcol align='left'>Variations</ttcol>
      <ttcol align='left'>Explanations / Notes</ttcol>
      <c>BRSKI</c>
      <c>-</c>
      <c>jose</c>
      <c>rrm jose est</c>
      <c>possible variation of RFC8995 with voucher according to I-D.ietf-anima-jws-voucher</c>
      <c>&#160;</c>
      <c>-</c>
      <c>jose-cmp</c>
      <c>rrm jose cmp</c>
      <c>possible variation of RFC8995 with voucher according to I-D.ietf-anima-jws-voucher and enrollment according to RFC9483, see also RFC9733</c>
      <c>&#160;</c>
      <c>-</c>
      <c>cose</c>
      <c>rrm cose est</c>
      <c>possible variation of RFC8995 with voucher according to I-D.ietf-anima-constrained-voucher</c>
      <c>&#160;</c>
      <c>-</c>
      <c>cose-cmp</c>
      <c>rrm cose cmp</c>
      <c>possible variation of RFC8995 with voucher according to I-D.ietf-anima-constrained-voucher and enrollment according to RFC9483, see also RFC9733</c>
      <c>&#160;</c>
      <c>-</c>
      <c>prm-cmp</c>
      <c>prm jose cmp</c>
      <c>possible variation of I-D.ietf-anima-brski-prm and RFC9733</c>
      <c>&#160;</c>
      <c>-</c>
      <c>prm-cose</c>
      <c>prm cose est</c>
      <c>possible variation of I-D.ietf-anima-brski-prm and I-D.ietf-anima-constrained-voucher</c>
      <c>&#160;</c>
      <c>-</c>
      <c>prm-cose-cmp</c>
      <c>prm cose cmp</c>
      <c>possible variation of I-D.ietf-anima-brski-prm, I-D.ietf-anima-constrained-voucher and RFC9733</c>
</texttable>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="T." surname="Werner" fullname="Thomas Werner">
      <organization>Siemens AG</organization>
      <address>
        <postal>
          <country>Germany</country>
        </postal>
        <email>thomas-werner@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </contact>
    <contact initials="S." surname="Fries" fullname="Steffen Fries">
      <organization>Siemens AG</organization>
      <address>
        <postal>
          <country>Germany</country>
        </postal>
        <email>steffen.fries@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </contact>
    <contact initials="H." surname="Brockhaus" fullname="Hendrik Brockhaus">
      <organization>Siemens AG</organization>
      <address>
        <postal>
          <country>Germany</country>
        </postal>
        <email>hendrik.brockhaus@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </contact>
    <contact initials="M." surname="Richardson" fullname="Michael Richardson">
      <organization></organization>
      <address>
        <postal>
          <country>Canada</country>
        </postal>
        <phone>+41 44 878 9200</phone>
        <email>mcr+ietf@sandelman.org</email>
      </address>
    </contact>
    <contact initials="D." surname="von&nbsp;Oheimb" fullname="David von&nbsp;Oheimb">
      <organization abbrev="Siemens">Siemens AG</organization>
      <address>
        <postal>
          <street>Otto-Hahn-Ring 6</street>
          <city>Munich</city>
          <code>81739</code>
          <country>Germany</country>
        </postal>
        <email>david.von.oheimb@siemens.com</email>
        <uri>https://www.siemens.com/</uri>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIACKjZGgAA+y9e3PbVpYv+v/+FDhM1W1phqRt+RFb3Z0ZxXI6nvFDLSmd
6eqkUiAJSYgpgAOAUtSu3M9yP8v9ZHe999oAqDwmfc65pyZV3RZJYL/3eq/f
ms1mYVmvyuryMNt2F7PnIXRlty4Os999fnr276+zVdku65uiucvyapXd5E2Z
d2Vdtb8L+WLRFDeHGT03s+fCql5W+TW0sGryi25WFtBsXpXX+WzRtB/K+OTs
4bPQdtDsd/m6ruCFrtkWodw09FfbHTx8+OLhQWi3i+uybaHT87sNPPX61fkX
IW+K/DB7vykaHg6N7m1e5ZfFdVF14Rbmc/Tu9duj8OEWXqm6oqmKbnaMQwrL
vDvM2m4FM6/aomq3rfS9KQ9DlnX1EqZ/V8Ac6cOq2HRXh9lT+LSsrzf5sos/
t3fXTXHRui/qpku/gQlVdVdelMUKvqxqeqprythMvu2u6uYwzLKyghfP59mr
5Yei6eBBXsnzumjWRdvG75sa96hYlV3dwMe6gfl+se22TXFblNlXZ0fwpW6Q
fU8T2FZdc3cojxTXebmGyXfFvy7b+UW+na8KHcareXZcfv/BBvGq/VDrN9Tf
6/ocF3C7hj1c3s2rdWywgGfnK3j2X8u66z2Eqw7TX2w7nrNM8aq+ztvsa9yn
xg/0T0VznVd32ulZiRvcZkd/csOnd2e39O6/tvzEHPYKHtk25WF21XWb9vDB
g9vb27n7+YH1ftYVFxdFlX3RlEX7C3tv+d35Bb77q3r/sqhWTfkh+7yplx+u
8u0vHcEVvz9f6Pu/ahRvy+VVXqyzU/y3WbV15YfxEu7WKodvNld0Vyf//ORR
9uRJ9vzT59kLuKmTOJzrZfPPeOv/tYVLWaxh9HMYuh6r43l2U1f/V7VoN79/
f1WU1ws7Ycf5Tbka+XU4cT3a8iXfqKKAG/W+6+rZl/lVNTsFopY9wzmUHUzg
7baCidGUVkjenj/69PGL342vtExkheOZw3jmNQ3lFy1rqGporitvCqQpp1+8
PPj0+YH8+fjF82fy59OD5w/xz5fvT1/N3nxxiN89e/biIXx1ffzujD9/+uwA
PsPH2dmxfvOY34dJ0Pt/Oj06O6Hfnr+gt49e2scn8JGotH7xVL+YHb2i7158
+vixfXdy+hYu9+x4PiDdmwbnvZS2eo/gNe+avKyK1eym3i6v+B6fnL7/j7/e
+/D3dVlB0/UPuPT/9vXZ7C/vv3r55avTwUvf37au5Vdn5zT2Tx8+fshr8fzx
s+eyrC+ePH98yGt2djw7O+W1ePHs2VP5/dETe/TRp7AZIZTVhd8x63sBhHdW
3Gyq2UXedrPVxawpmIHpFr54/py38Ii7+fTg6YGM6PmLJ9pYQbRbpnLZ5O1m
tqradoW/f3n69QtqAxgOs9/JVy2e33dwMWaf522B3G2zga9aYEnA0JbAANsi
+7LsstO8K9oJvbyCPw+zRy9ePKePylgy+m8m/7rrVuB1PL/K17SiYw+9vCqr
uzz7yxy6uSnbq7z6kPOzXd5c4o3zN+C6XDZ1W190dAeKarZtHzRFW+TN8urB
7Qa3vQP2/GC7Wdf5qn1w8PDRpw8eHjyg+c83q4sQZrMZXG88HMsuhPOrss1A
otgiV8/aTbFERtpmV/Utn9YMvi87+GqatXAyMuAhTXFZ4vsNfIfHin7crIvV
JbxYN1ndwQFqQ3eVdxnIERl0hEtNb7abGmgWvrnMq2xRmPwDG4AiRlusi2UH
HxZ3vf5dM2UF3+TA3tppKGjM+Xp9B18Dpyqyi3xZZPWFk6X0FxgsiBv1GrYY
x4YjKIE01astvFHV1axEOaZGoWdRroGqhVsg/fBLlxX/uaU+2u1mAxIID3AB
M41zovHb0Oa80tflarUuQvgkOwfqV1b1ur68yz5+0sVPP+IuFNmH4i67rYEv
ZJO3X52dT6b8b/buPf19+urPX70+fXWMf599efTmjf0R5ImzL99/9eY4/hXf
fPn+7dtX7475Zfg2S74Kk7dHf4VfcPiT9yfnr9+/O3oz4TXzhwO3Eq4G7Bkt
06YpcBnyNqyKdgnyRoGzzz5/efL//j+PnmQfP/4PpMmPHr348Uf5ABzhCXzA
NeXe6gpWlD/C9twFuIBwkrEVWGvYnk3Z5Ws4KrDlLRzIChhxU8DC/tPfcGW+
Pcz+sFhuHj35TL7ACSdf6polX9KaDb8ZvMyLOPLVSDe2msn3vZVOx3v01+Sz
rrv78g//sgbync0ePf+Xz0L/pjbFGu9EzQfbnaZsVVwg1cdV/PiRrtCPP86z
DI/YRb1e17d4ifCFlnY0bt4mbzq+RfkK5F64OLDUL5Gg/NAdBpAFiiL7i96p
TH6AR16fTLPXJzdP6P+f4ZOve0cHf4ERX8C9xxO0V1bL9bYFPrC+26dXkWrg
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
AQA=

-->

</rfc>

